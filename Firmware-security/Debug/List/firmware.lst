
AVRASM ver. 2.1.30  D:\1code\ATMELMega_C_Laser_security_system\Firmware-security\Debug\List\firmware.asm Sun May 14 12:46:34 2023

                 
                 
                 ;CodeVisionAVR C Compiler V3.51 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega164A
                 ;Program type           : Application
                 ;Clock frequency        : 20.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega164A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x04FF
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 009e 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00003e 2710
00003f 03e8
000040 0064
000041 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000042 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000043 1000
000044 0100
000045 0010
000046 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000047 6f63
000048 6e75
000049 6574
00004a 2072      	.DB  0x63,0x6F,0x75,0x6E,0x74,0x65,0x72,0x20
00004b 6176
00004c 756c
00004d 2065
00004e 7369      	.DB  0x76,0x61,0x6C,0x75,0x65,0x20,0x69,0x73
00004f 203a
000050 7525
000051 0a20
000052 6500      	.DB  0x3A,0x20,0x25,0x75,0x20,0xA,0x0,0x65
000053 766e
000054 6c20
000055 6769
000056 7468      	.DB  0x6E,0x76,0x20,0x6C,0x69,0x67,0x68,0x74
000057 6920
000058 3a73
000059 2520
00005a 2c64      	.DB  0x20,0x69,0x73,0x3A,0x20,0x25,0x64,0x2C
00005b 6c20
00005c 6769
00005d 7468
00005e 635f      	.DB  0x20,0x6C,0x69,0x67,0x68,0x74,0x5F,0x63
00005f 6568
000060 6b63
000061 6920
000062 2073      	.DB  0x68,0x65,0x63,0x6B,0x20,0x69,0x73,0x20
000063 6425
000064 6c00
000065 6769
000066 7468      	.DB  0x25,0x64,0x0,0x6C,0x69,0x67,0x68,0x74
000067 6c20
000068 7665
000069 6c65
00006a 6420      	.DB  0x20,0x6C,0x65,0x76,0x65,0x6C,0x20,0x64
00006b 6669
00006c 2066
00006d 7369
00006e 203a      	.DB  0x69,0x66,0x66,0x20,0x69,0x73,0x3A,0x20
00006f 6425
000070 0a20
000071 7300
000072 6e65      	.DB  0x25,0x64,0x20,0xA,0x0,0x73,0x65,0x6E
000073 6f73
000074 2072
000075 696c
000076 6867      	.DB  0x73,0x6F,0x72,0x20,0x6C,0x69,0x67,0x68
000077 3a74
000078 2520
000079 2c75
00007a 7220      	.DB  0x74,0x3A,0x20,0x25,0x75,0x2C,0x20,0x72
00007b 6e61
00007c 6f64
00007d 5f6d
00007e 6863      	.DB  0x61,0x6E,0x64,0x6F,0x6D,0x5F,0x63,0x68
00007f 6365
000080 3a6b
000081 2520
000082 2c64      	.DB  0x65,0x63,0x6B,0x3A,0x20,0x25,0x64,0x2C
000083 6520
000084 766e
000085 6c5f
000086 6769      	.DB  0x20,0x65,0x6E,0x76,0x5F,0x6C,0x69,0x67
000087 7468
000088 203a
000089 7525
00008a 0a20      	.DB  0x68,0x74,0x3A,0x20,0x25,0x75,0x20,0xA
00008b 5200
00008c 4e41
00008d 4f44
00008e 204d      	.DB  0x0,0x52,0x41,0x4E,0x44,0x4F,0x4D,0x20
00008f 4843
000090 4345
000091 214b
000092 0a20      	.DB  0x43,0x48,0x45,0x43,0x4B,0x21,0x20,0xA
D:\1code\ATMELMega_C_Laser_security_system\Firmware-security\Debug\List\firmware.asm(1487): warning: .cseg .db misalignment - padding zero byte
000093 0000      	.DB  0x0
                 _0x2020060:
D:\1code\ATMELMega_C_Laser_security_system\Firmware-security\Debug\List\firmware.asm(1489): warning: .cseg .db misalignment - padding zero byte
000094 0001      	.DB  0x1
                 _0x2020000:
000095 4e2d
000096 4e41
000097 4900
000098 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\1code\ATMELMega_C_Laser_security_system\Firmware-security\Debug\List\firmware.asm(1492): warning: .cseg .db misalignment - padding zero byte
000099 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00009a 0001      	.DW  0x01
00009b 0200      	.DW  __seed_G101
00009c 0128      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
00009d 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00009e 94f8      	CLI
00009f 27ee      	CLR  R30
0000a0 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000a1 e0f1      	LDI  R31,1
0000a2 bff5      	OUT  MCUCR,R31
0000a3 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0000a4 e08d      	LDI  R24,(14-2)+1
0000a5 e0a2      	LDI  R26,2
0000a6 27bb      	CLR  R27
                 __CLEAR_REG:
0000a7 93ed      	ST   X+,R30
0000a8 958a      	DEC  R24
0000a9 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000aa e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000ab e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000ac e0a0      	LDI  R26,LOW(__SRAM_START)
0000ad e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000ae 93ed      	ST   X+,R30
0000af 9701      	SBIW R24,1
0000b0 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000b1 e3e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000b2 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000b3 9185      	LPM  R24,Z+
0000b4 9195      	LPM  R25,Z+
0000b5 9700      	SBIW R24,0
0000b6 f061      	BREQ __GLOBAL_INI_END
0000b7 91a5      	LPM  R26,Z+
0000b8 91b5      	LPM  R27,Z+
0000b9 9005      	LPM  R0,Z+
0000ba 9015      	LPM  R1,Z+
0000bb 01bf      	MOVW R22,R30
0000bc 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000bd 9005      	LPM  R0,Z+
0000be 920d      	ST   X+,R0
0000bf 9701      	SBIW R24,1
0000c0 f7e1      	BRNE __GLOBAL_INI_LOOP
0000c1 01fb      	MOVW R30,R22
0000c2 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0000c3 e0e0      	LDI  R30,__GPIOR0_INIT
0000c4 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000c5 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000c6 bfed      	OUT  SPL,R30
0000c7 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000c8 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000c9 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000ca e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000cb 940c 01b6 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x200
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _heartbeat_mcu:
                 ; .FSTART _heartbeat_mcu
0000cd 9b5e      	SBIS 0xB,6
0000ce c002      	RJMP _0x3
0000cf 985e      	CBI  0xB,6
0000d0 c001      	RJMP _0x4
                 _0x3:
0000d1 9a5e      	SBI  0xB,6
                 _0x4:
0000d2 9508      	RET
                 ; .FEND
                 _initialise_mcu:
                 ; .FSTART _initialise_mcu
0000d3 e8e0      	LDI  R30,LOW(128)
0000d4 93e0 0061 	STS  97,R30
0000d6 e0e0      	LDI  R30,LOW(0)
0000d7 93e0 0061 	STS  97,R30
0000d9 b9e1      	OUT  0x1,R30
0000da b9e2      	OUT  0x2,R30
0000db b9e4      	OUT  0x4,R30
0000dc b9e5      	OUT  0x5,R30
0000dd b9e7      	OUT  0x7,R30
0000de b9e8      	OUT  0x8,R30
0000df e5e8      	LDI  R30,LOW(88)
0000e0 b9ea      	OUT  0xA,R30
0000e1 e0e0      	LDI  R30,LOW(0)
0000e2 b9eb      	OUT  0xB,R30
0000e3 bde4      	OUT  0x24,R30
0000e4 bde5      	OUT  0x25,R30
0000e5 bde6      	OUT  0x26,R30
0000e6 bde7      	OUT  0x27,R30
0000e7 bde8      	OUT  0x28,R30
0000e8 93e0 0080 	STS  128,R30
0000ea 93e0 0081 	STS  129,R30
0000ec 93e0 0085 	STS  133,R30
0000ee 93e0 0084 	STS  132,R30
0000f0 93e0 0087 	STS  135,R30
0000f2 93e0 0086 	STS  134,R30
0000f4 93e0 0089 	STS  137,R30
0000f6 93e0 0088 	STS  136,R30
0000f8 93e0 008b 	STS  139,R30
0000fa 93e0 008a 	STS  138,R30
0000fc 93e0 00b6 	STS  182,R30
0000fe 93e0 00b0 	STS  176,R30
000100 93e0 00b1 	STS  177,R30
000102 93e0 00b2 	STS  178,R30
000104 93e0 00b3 	STS  179,R30
000106 93e0 00b4 	STS  180,R30
000108 93e0 006e 	STS  110,R30
00010a 93e0 006f 	STS  111,R30
00010c 93e0 0070 	STS  112,R30
00010e 93e0 0069 	STS  105,R30
000110 bbed      	OUT  0x1D,R30
000111 93e0 0068 	STS  104,R30
000113 93e0 00c0 	STS  192,R30
000115 e0e8      	LDI  R30,LOW(8)
000116 93e0 00c1 	STS  193,R30
000118 e0e6      	LDI  R30,LOW(6)
000119 93e0 00c2 	STS  194,R30
00011b e0e0      	LDI  R30,LOW(0)
00011c 93e0 00c5 	STS  197,R30
00011e e8e1      	LDI  R30,LOW(129)
00011f 93e0 00c4 	STS  196,R30
000121 e0e0      	LDI  R30,LOW(0)
000122 93e0 00c9 	STS  201,R30
000124 e8e0      	LDI  R30,LOW(128)
000125 bfe0      	OUT  0x30,R30
000126 e0e0      	LDI  R30,LOW(0)
000127 93e0 007f 	STS  127,R30
000129 e0e1      	LDI  R30,LOW(1)
00012a 93e0 007e 	STS  126,R30
00012c e4e0      	LDI  R30,LOW(64)
00012d 93e0 007c 	STS  124,R30
00012f eae5      	LDI  R30,LOW(165)
000130 93e0 007a 	STS  122,R30
000132 e0e0      	LDI  R30,LOW(0)
000133 93e0 007b 	STS  123,R30
000135 bdec      	OUT  0x2C,R30
000136 93e0 00bc 	STS  188,R30
000138 e0e0      	LDI  R30,LOW(0)
000139 e0f0      	LDI  R31,HIGH(0)
00013a 9508      	RET
                 ; .FEND
                 _read_voltage:
                 ; .FSTART _read_voltage
00013b 931a      	ST   -Y,R17
00013c 2f1a      	MOV  R17,R26
                 ;	channel -> R17
00013d 2fe1      	MOV  R30,R17
00013e 64e0      	ORI  R30,0x40
00013f 93e0 007c 	STS  124,R30
000141 91e0 007a 	LDS  R30,122
000143 64e0      	ORI  R30,0x40
000144 93e0 007a 	STS  122,R30
                 _0x5:
000146 91e0 007a 	LDS  R30,122
000148 71e0      	ANDI R30,LOW(0x10)
000149 f3e1      	BREQ _0x5
00014a 91e0 007a 	LDS  R30,122
00014c 61e0      	ORI  R30,0x10
00014d 93e0 007a 	STS  122,R30
00014f 91e0 0078 	LDS  R30,120
000151 91f0 0079 	LDS  R31,120+1
000153 c0af      	RJMP _0x20A0001
                 ; .FEND
                 _read_light:
                 ; .FSTART _read_light
000154 931a      	ST   -Y,R17
000155 930a      	ST   -Y,R16
                 ;	light_level -> R16,R17
000156 e0a0      	LDI  R26,LOW(0)
000157 dfe3      	RCALL _read_voltage
000158 018f      	MOVW R16,R30
000159 c014      	RJMP _0x20A0003
                 ; .FEND
                 _ring_alarm:
                 ; .FSTART _ring_alarm
00015a 931a      	ST   -Y,R17
00015b 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
00015c e000     +LDI R16 , LOW ( 0 )
00015d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x9:
                +
00015e 3004     +CPI R16 , LOW ( 4 )
00015f e0e0     +LDI R30 , HIGH ( 4 )
000160 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
000161 f45c      	BRGE _0xA
000162 985b      	CBI  0xB,3
000163 eca8      	LDI  R26,LOW(200)
000164 e0b0      	LDI  R27,0
000165 d2cb      	RCALL _delay_ms
000166 9a5b      	SBI  0xB,3
000167 eca8      	LDI  R26,LOW(200)
000168 e0b0      	LDI  R27,0
000169 d2c7      	RCALL _delay_ms
                +
00016a 5f0f     +SUBI R16 , LOW ( - 1 )
00016b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00016c cff1      	RJMP _0x9
                 _0xA:
00016d 985b      	CBI  0xB,3
                 _0x20A0003:
00016e 9109      	LD   R16,Y+
00016f 9119      	LD   R17,Y+
000170 9508      	RET
                 ; .FEND
                 _laser_spoof_check:
                 ; .FSTART _laser_spoof_check
000171 d265      	RCALL __SAVELOCR4
000172 018d      	MOVW R16,R26
                +
000173 812c     +LDD R18 , Y + 4
000174 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
                 ;	env_light -> R18,R19
                 ;	*counter -> R16,R17
000175 91ac      	LD   R26,X
000176 33ac      	CPI  R26,LOW(0x3C)
000177 f5b1      	BRNE _0x11
000178 9722      	SBIW R28,2
000179 e0e0      	LDI  R30,LOW(0)
00017a 83e8      	ST   Y,R30
00017b 83e9      	STD  Y+1,R30
                 ;	light_check -> Y+0
                +
00017c e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00017d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00017e d218      	RCALL SUBOPT_0x0
00017f e084      	LDI  R24,4
000180 d1ba      	RCALL _printf
000181 9626      	ADIW R28,6
000182 d21b      	RCALL SUBOPT_0x1
000183 83e8      	ST   Y,R30
000184 83f9      	STD  Y+1,R31
                +
000185 eae5     +LDI R30 , LOW ( 2 * _0x0 + ( 23 ) )
000186 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 23 ) )
                 	__POINTW1FN _0x0,23
000187 93fa      	ST   -Y,R31
000188 93ea      	ST   -Y,R30
000189 d219      	RCALL SUBOPT_0x2
00018a 81ee      	LDD  R30,Y+6
00018b 81ff      	LDD  R31,Y+6+1
00018c 2766      	CLR  R22
00018d 2777      	CLR  R23
00018e d29d      	RCALL __PUTPARD1
00018f e088      	LDI  R24,8
000190 d1aa      	RCALL _printf
000191 962a      	ADIW R28,10
                +
000192 ece9     +LDI R30 , LOW ( 2 * _0x0 + ( 59 ) )
000193 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 59 ) )
                 	__POINTW1FN _0x0,59
000194 93fa      	ST   -Y,R31
000195 93ea      	ST   -Y,R30
000196 81ea      	LDD  R30,Y+2
000197 81fb      	LDD  R31,Y+2+1
000198 1be2      	SUB  R30,R18
000199 0bf3      	SBC  R31,R19
00019a 2766      	CLR  R22
00019b 2777      	CLR  R23
00019c d28f      	RCALL __PUTPARD1
00019d e084      	LDI  R24,4
00019e d19c      	RCALL _printf
00019f 9626      	ADIW R28,6
0001a0 81a8      	LD   R26,Y
0001a1 81b9      	LDD  R27,Y+1
0001a2 1ba2      	SUB  R26,R18
0001a3 0bb3      	SBC  R27,R19
0001a4 97d3      	SBIW R26,51
0001a5 f01c      	BRLT _0x14
0001a6 e0e1      	LDI  R30,LOW(1)
0001a7 9622      	ADIW R28,2
0001a8 c00a      	RJMP _0x20A0002
                 _0x14:
0001a9 d1fe      	RCALL SUBOPT_0x3
0001aa 01d8      	MOVW R26,R16
0001ab e0e0      	LDI  R30,LOW(0)
0001ac 93ec      	ST   X,R30
0001ad 9622      	ADIW R28,2
                 _0x11:
0001ae 01d8      	MOVW R26,R16
0001af 91ec      	LD   R30,X
0001b0 5fef      	SUBI R30,-LOW(1)
0001b1 93ec      	ST   X,R30
0001b2 e0e0      	LDI  R30,LOW(0)
                 _0x20A0002:
0001b3 d22a      	RCALL __LOADLOCR4
0001b4 9626      	ADIW R28,6
0001b5 9508      	RET
                 ; .FEND
                 ;void main(void) {
                 ; 0000 000A void main(void) {
                 _main:
                 ; .FSTART _main
                 ; 0000 000B 
                 ; 0000 000C unsigned int light = 0;
                 ; 0000 000D unsigned int env_light = 0;
                 ; 0000 000E char counter = 0;
                 ; 0000 000F int random_check = rand() % 300;
                 ; 0000 0010 
                 ; 0000 0011 initialise_mcu();
0001b6 9722      	SBIW R28,2
                 ;	light -> R16,R17
                 ;	env_light -> R18,R19
                 ;	counter -> R21
                 ;	random_check -> Y+0
                +
0001b7 e000     +LDI R16 , LOW ( 0 )
0001b8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0001b9 e020     +LDI R18 , LOW ( 0 )
0001ba e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0001bb e050      	LDI  R21,0
0001bc d1ef      	RCALL SUBOPT_0x4
0001bd df15      	RCALL _initialise_mcu
                 ; 0000 0012 env_light = read_light();
0001be df95      	RCALL _read_light
0001bf d1f4      	RCALL SUBOPT_0x5
                 ; 0000 0013 
                 ; 0000 0014 delay_ms(50);
                 ; 0000 0015 PORTD.4 = 1;
0001c0 9a5c      	SBI  0xB,4
                 ; 0000 0016 
                 ; 0000 0017 while (1) {
                 _0x19:
                 ; 0000 0018 
                 ; 0000 0019 light = read_light();
0001c1 df92      	RCALL _read_light
0001c2 018f      	MOVW R16,R30
                 ; 0000 001A delay_ms(50);
0001c3 e3a2      	LDI  R26,LOW(50)
0001c4 e0b0      	LDI  R27,0
0001c5 d26b      	RCALL _delay_ms
                 ; 0000 001B 
                 ; 0000 001C /* Wait for empty transmit buffer */
                 ; 0000 001D printf("sensor light: %u, random_check: %d, env_light: %u \n", light, random_check, env_light);
                +
0001c6 eee3     +LDI R30 , LOW ( 2 * _0x0 + ( 85 ) )
0001c7 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 85 ) )
                 	__POINTW1FN _0x0,85
0001c8 d1ce      	RCALL SUBOPT_0x0
0001c9 81ee      	LDD  R30,Y+6
0001ca 81ff      	LDD  R31,Y+6+1
                +
0001cb 2f6f     +MOV R22 , R31
0001cc 0f66     +ADD R22 , R22
0001cd 0b66     +SBC R22 , R22
0001ce 2f76     +MOV R23 , R22
                 	__CWD1
0001cf d25c      	RCALL __PUTPARD1
0001d0 d1d2      	RCALL SUBOPT_0x2
0001d1 e08c      	LDI  R24,12
0001d2 d168      	RCALL _printf
0001d3 962e      	ADIW R28,14
                 ; 0000 001E 
                 ; 0000 001F if (light <= env_light + 10) {
0001d4 01f9      	MOVW R30,R18
0001d5 963a      	ADIW R30,10
0001d6 17e0      	CP   R30,R16
0001d7 07f1      	CPC  R31,R17
0001d8 f008      	BRLO _0x1C
                 ; 0000 0020 ring_alarm();
0001d9 df80      	RCALL _ring_alarm
                 ; 0000 0021 }
                 ; 0000 0022 
                 ; 0000 0023 if(laser_spoof_check(env_light, &counter)) {
                 _0x1C:
0001da 933a      	ST   -Y,R19
0001db 932a      	ST   -Y,R18
0001dc b7ad      	IN   R26,SPL
0001dd b7be      	IN   R27,SPH
0001de 935f      	PUSH R21
0001df df91      	RCALL _laser_spoof_check
0001e0 915f      	POP  R21
0001e1 30e0      	CPI  R30,0
0001e2 f009      	BREQ _0x1D
                 ; 0000 0024 ring_alarm();
0001e3 df76      	RCALL _ring_alarm
                 ; 0000 0025 }
                 ; 0000 0026 
                 ; 0000 0027 
                 ; 0000 0028 if (random_check == 0) {
                 _0x1D:
0001e4 81e8      	LD   R30,Y
0001e5 81f9      	LDD  R31,Y+1
0001e6 9730      	SBIW R30,0
0001e7 f459      	BRNE _0x1E
                 ; 0000 0029 
                 ; 0000 002A printf("RANDOM CHECK! \n");
                +
0001e8 e1e7     +LDI R30 , LOW ( 2 * _0x0 + ( 137 ) )
0001e9 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 137 ) )
                 	__POINTW1FN _0x0,137
0001ea 93fa      	ST   -Y,R31
0001eb 93ea      	ST   -Y,R30
0001ec e080      	LDI  R24,0
0001ed d14d      	RCALL _printf
0001ee 9622      	ADIW R28,2
                 ; 0000 002B random_check = rand() % 300;
0001ef d1bc      	RCALL SUBOPT_0x4
                 ; 0000 002C PORTD.4 = 0;
0001f0 d1ad      	RCALL SUBOPT_0x1
                 ; 0000 002D delay_ms(50);
                 ; 0000 002E env_light = read_light();
0001f1 d1c2      	RCALL SUBOPT_0x5
                 ; 0000 002F delay_ms(50);
                 ; 0000 0030 PORTD.4 = 1;
0001f2 d1b5      	RCALL SUBOPT_0x3
                 ; 0000 0031 delay_ms(100);
                 ; 0000 0032 }
                 ; 0000 0033 
                 ; 0000 0034 random_check -= 1;
                 _0x1E:
0001f3 81e8      	LD   R30,Y
0001f4 81f9      	LDD  R31,Y+1
0001f5 9731      	SBIW R30,1
0001f6 83e8      	ST   Y,R30
0001f7 83f9      	STD  Y+1,R31
                 ; 0000 0035 heartbeat_mcu();
0001f8 ded4      	RCALL _heartbeat_mcu
                 ; 0000 0036 
                 ; 0000 0037 }
0001f9 cfc7      	RJMP _0x19
                 ; 0000 0038 }
                 _0x23:
0001fa cfff      	RJMP _0x23
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0001fb 931a      	ST   -Y,R17
0001fc 2f1a      	MOV  R17,R26
                 _0x2000006:
0001fd 91e0 00c0 	LDS  R30,192
0001ff 72e0      	ANDI R30,LOW(0x20)
000200 f3e1      	BREQ _0x2000006
000201 9310 00c6 	STS  198,R17
                 _0x20A0001:
000203 9119      	LD   R17,Y+
000204 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
000205 d1d1      	RCALL __SAVELOCR4
000206 018d      	MOVW R16,R26
000207 813c      	LDD  R19,Y+4
000208 2fa3      	MOV  R26,R19
000209 dff1      	RCALL _putchar
00020a 01d8      	MOVW R26,R16
00020b 91ed      	LD   R30,X+
00020c 91fd      	LD   R31,X+
00020d 9631      	ADIW R30,1
00020e 93fe      	ST   -X,R31
00020f 93ee      	ST   -X,R30
000210 d1cd      	RCALL __LOADLOCR4
000211 9625      	ADIW R28,5
000212 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000213 93ba      	ST   -Y,R27
000214 93aa      	ST   -Y,R26
000215 9726      	SBIW R28,6
000216 d1be      	RCALL __SAVELOCR6
000217 e010      	LDI  R17,0
000218 85ac      	LDD  R26,Y+12
000219 85bd      	LDD  R27,Y+12+1
00021a e0e0      	LDI  R30,LOW(0)
00021b e0f0      	LDI  R31,HIGH(0)
00021c 93ed      	ST   X+,R30
00021d 93fc      	ST   X,R31
                 _0x200001C:
00021e 89ea      	LDD  R30,Y+18
00021f 89fb      	LDD  R31,Y+18+1
000220 9631      	ADIW R30,1
000221 8bea      	STD  Y+18,R30
000222 8bfb      	STD  Y+18+1,R31
000223 9731      	SBIW R30,1
000224 91e4      	LPM  R30,Z
000225 2f2e      	MOV  R18,R30
000226 30e0      	CPI  R30,0
000227 f409      	BRNE PC+2
000228 c10b      	RJMP _0x200001E
000229 2fe1      	MOV  R30,R17
00022a 30e0      	CPI  R30,0
00022b f431      	BRNE _0x2000022
00022c 3225      	CPI  R18,37
00022d f411      	BRNE _0x2000023
00022e e011      	LDI  R17,LOW(1)
00022f c001      	RJMP _0x2000024
                 _0x2000023:
000230 d187      	RCALL SUBOPT_0x6
                 _0x2000024:
000231 c101      	RJMP _0x2000021
                 _0x2000022:
000232 30e1      	CPI  R30,LOW(0x1)
000233 f4a1      	BRNE _0x2000025
000234 3225      	CPI  R18,37
000235 f411      	BRNE _0x2000026
000236 d181      	RCALL SUBOPT_0x6
000237 c0fa      	RJMP _0x20000D2
                 _0x2000026:
000238 e012      	LDI  R17,LOW(2)
000239 e040      	LDI  R20,LOW(0)
00023a e000      	LDI  R16,LOW(0)
00023b 322d      	CPI  R18,45
00023c f411      	BRNE _0x2000027
00023d e001      	LDI  R16,LOW(1)
00023e c0f4      	RJMP _0x2000021
                 _0x2000027:
00023f 322b      	CPI  R18,43
000240 f411      	BRNE _0x2000028
000241 e24b      	LDI  R20,LOW(43)
000242 c0f0      	RJMP _0x2000021
                 _0x2000028:
000243 3220      	CPI  R18,32
000244 f411      	BRNE _0x2000029
000245 e240      	LDI  R20,LOW(32)
000246 c0ec      	RJMP _0x2000021
                 _0x2000029:
000247 c002      	RJMP _0x200002A
                 _0x2000025:
000248 30e2      	CPI  R30,LOW(0x2)
000249 f439      	BRNE _0x200002B
                 _0x200002A:
00024a e050      	LDI  R21,LOW(0)
00024b e013      	LDI  R17,LOW(3)
00024c 3320      	CPI  R18,48
00024d f411      	BRNE _0x200002C
00024e 6800      	ORI  R16,LOW(128)
00024f c0e3      	RJMP _0x2000021
                 _0x200002C:
000250 c003      	RJMP _0x200002D
                 _0x200002B:
000251 30e3      	CPI  R30,LOW(0x3)
000252 f009      	BREQ PC+2
000253 c0df      	RJMP _0x2000021
                 _0x200002D:
000254 3320      	CPI  R18,48
000255 f010      	BRLO _0x2000030
000256 332a      	CPI  R18,58
000257 f008      	BRLO _0x2000031
                 _0x2000030:
000258 c007      	RJMP _0x200002F
                 _0x2000031:
000259 e0aa      	LDI  R26,LOW(10)
00025a 9f5a      	MUL  R21,R26
00025b 2d50      	MOV  R21,R0
00025c 2fe2      	MOV  R30,R18
00025d 53e0      	SUBI R30,LOW(48)
00025e 0f5e      	ADD  R21,R30
00025f c0d3      	RJMP _0x2000021
                 _0x200002F:
000260 2fe2      	MOV  R30,R18
000261 36e3      	CPI  R30,LOW(0x63)
000262 f439      	BRNE _0x2000035
000263 d15b      	RCALL SUBOPT_0x7
000264 89e8      	LDD  R30,Y+16
000265 89f9      	LDD  R31,Y+16+1
000266 81a4      	LDD  R26,Z+4
000267 93aa      	ST   -Y,R26
000268 d15c      	RCALL SUBOPT_0x8
000269 c0c8      	RJMP _0x2000036
                 _0x2000035:
00026a 37e3      	CPI  R30,LOW(0x73)
00026b f429      	BRNE _0x2000038
00026c d152      	RCALL SUBOPT_0x7
00026d d15d      	RCALL SUBOPT_0x9
00026e d10f      	RCALL _strlen
00026f 2f1e      	MOV  R17,R30
000270 c007      	RJMP _0x2000039
                 _0x2000038:
000271 37e0      	CPI  R30,LOW(0x70)
000272 f449      	BRNE _0x200003B
000273 d14b      	RCALL SUBOPT_0x7
000274 d156      	RCALL SUBOPT_0x9
000275 d114      	RCALL _strlenf
000276 2f1e      	MOV  R17,R30
000277 6008      	ORI  R16,LOW(8)
                 _0x2000039:
000278 6002      	ORI  R16,LOW(2)
000279 770f      	ANDI R16,LOW(127)
00027a e030      	LDI  R19,LOW(0)
00027b c03a      	RJMP _0x200003C
                 _0x200003B:
00027c 36e4      	CPI  R30,LOW(0x64)
00027d f011      	BREQ _0x200003F
00027e 36e9      	CPI  R30,LOW(0x69)
00027f f411      	BRNE _0x2000040
                 _0x200003F:
000280 6004      	ORI  R16,LOW(4)
000281 c002      	RJMP _0x2000041
                 _0x2000040:
000282 37e5      	CPI  R30,LOW(0x75)
000283 f431      	BRNE _0x2000042
                 _0x2000041:
000284 e7ec      	LDI  R30,LOW(_tbl10_G100*2)
000285 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000286 83ee      	STD  Y+6,R30
000287 83ff      	STD  Y+6+1,R31
000288 e015      	LDI  R17,LOW(5)
000289 c00c      	RJMP _0x2000043
                 _0x2000042:
00028a 35e8      	CPI  R30,LOW(0x58)
00028b f411      	BRNE _0x2000045
00028c 6008      	ORI  R16,LOW(8)
00028d c003      	RJMP _0x2000046
                 _0x2000045:
00028e 37e8      	CPI  R30,LOW(0x78)
00028f f009      	BREQ PC+2
000290 c0a1      	RJMP _0x2000077
                 _0x2000046:
000291 e8e6      	LDI  R30,LOW(_tbl16_G100*2)
000292 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000293 83ee      	STD  Y+6,R30
000294 83ff      	STD  Y+6+1,R31
000295 e014      	LDI  R17,LOW(4)
                 _0x2000043:
000296 ff02      	SBRS R16,2
000297 c015      	RJMP _0x2000048
000298 d126      	RCALL SUBOPT_0x7
000299 89a8      	LDD  R26,Y+16
00029a 89b9      	LDD  R27,Y+16+1
00029b 9614      	ADIW R26,4
00029c 91ed      	LD   R30,X+
00029d 91fd      	LD   R31,X+
00029e 87ea      	STD  Y+10,R30
00029f 87fb      	STD  Y+10+1,R31
0002a0 85ab      	LDD  R26,Y+11
0002a1 23aa      	TST  R26
0002a2 f422      	BRPL _0x2000049
0002a3 d13f      	RCALL __ANEGW1
0002a4 87ea      	STD  Y+10,R30
0002a5 87fb      	STD  Y+10+1,R31
0002a6 e24d      	LDI  R20,LOW(45)
                 _0x2000049:
0002a7 3040      	CPI  R20,0
0002a8 f011      	BREQ _0x200004A
0002a9 5f1f      	SUBI R17,-LOW(1)
0002aa c001      	RJMP _0x200004B
                 _0x200004A:
0002ab 7f0b      	ANDI R16,LOW(251)
                 _0x200004B:
0002ac c009      	RJMP _0x200004C
                 _0x2000048:
0002ad d111      	RCALL SUBOPT_0x7
0002ae 89a8      	LDD  R26,Y+16
0002af 89b9      	LDD  R27,Y+16+1
0002b0 9614      	ADIW R26,4
                +
0002b1 91ed     +LD R30 , X +
0002b2 91fc     +LD R31 , X
0002b3 9711     +SBIW R26 , 1
                 	__GETW1P
0002b4 87ea      	STD  Y+10,R30
0002b5 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
0002b6 fd00      	SBRC R16,0
0002b7 c010      	RJMP _0x200004D
                 _0x200004E:
0002b8 1715      	CP   R17,R21
0002b9 f470      	BRSH _0x2000050
0002ba ff07      	SBRS R16,7
0002bb c008      	RJMP _0x2000051
0002bc ff02      	SBRS R16,2
0002bd c004      	RJMP _0x2000052
0002be 7f0b      	ANDI R16,LOW(251)
0002bf 2f24      	MOV  R18,R20
0002c0 5011      	SUBI R17,LOW(1)
0002c1 c001      	RJMP _0x2000053
                 _0x2000052:
0002c2 e320      	LDI  R18,LOW(48)
                 _0x2000053:
0002c3 c001      	RJMP _0x2000054
                 _0x2000051:
0002c4 e220      	LDI  R18,LOW(32)
                 _0x2000054:
0002c5 d0f2      	RCALL SUBOPT_0x6
0002c6 5051      	SUBI R21,LOW(1)
0002c7 cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
0002c8 2f31      	MOV  R19,R17
0002c9 ff01      	SBRS R16,1
0002ca c016      	RJMP _0x2000055
                 _0x2000056:
0002cb 3030      	CPI  R19,0
0002cc f099      	BREQ _0x2000058
0002cd ff03      	SBRS R16,3
0002ce c006      	RJMP _0x2000059
0002cf 81ee      	LDD  R30,Y+6
0002d0 81ff      	LDD  R31,Y+6+1
0002d1 9125      	LPM  R18,Z+
0002d2 83ee      	STD  Y+6,R30
0002d3 83ff      	STD  Y+6+1,R31
0002d4 c005      	RJMP _0x200005A
                 _0x2000059:
0002d5 81ae      	LDD  R26,Y+6
0002d6 81bf      	LDD  R27,Y+6+1
0002d7 912d      	LD   R18,X+
0002d8 83ae      	STD  Y+6,R26
0002d9 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0002da d0dd      	RCALL SUBOPT_0x6
0002db 3050      	CPI  R21,0
0002dc f009      	BREQ _0x200005B
0002dd 5051      	SUBI R21,LOW(1)
                 _0x200005B:
0002de 5031      	SUBI R19,LOW(1)
0002df cfeb      	RJMP _0x2000056
                 _0x2000058:
0002e0 c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0002e1 e320      	LDI  R18,LOW(48)
0002e2 81ee      	LDD  R30,Y+6
0002e3 81ff      	LDD  R31,Y+6+1
0002e4 d143      	RCALL __GETW1PF
0002e5 87e8      	STD  Y+8,R30
0002e6 87f9      	STD  Y+8+1,R31
0002e7 81ee      	LDD  R30,Y+6
0002e8 81ff      	LDD  R31,Y+6+1
0002e9 9632      	ADIW R30,2
0002ea 83ee      	STD  Y+6,R30
0002eb 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0002ec 85e8      	LDD  R30,Y+8
0002ed 85f9      	LDD  R31,Y+8+1
0002ee 85aa      	LDD  R26,Y+10
0002ef 85bb      	LDD  R27,Y+10+1
0002f0 17ae      	CP   R26,R30
0002f1 07bf      	CPC  R27,R31
0002f2 f050      	BRLO _0x2000062
0002f3 5f2f      	SUBI R18,-LOW(1)
0002f4 85a8      	LDD  R26,Y+8
0002f5 85b9      	LDD  R27,Y+8+1
0002f6 85ea      	LDD  R30,Y+10
0002f7 85fb      	LDD  R31,Y+10+1
0002f8 1bea      	SUB  R30,R26
0002f9 0bfb      	SBC  R31,R27
0002fa 87ea      	STD  Y+10,R30
0002fb 87fb      	STD  Y+10+1,R31
0002fc cfef      	RJMP _0x2000060
                 _0x2000062:
0002fd 332a      	CPI  R18,58
0002fe f028      	BRLO _0x2000063
0002ff ff03      	SBRS R16,3
000300 c002      	RJMP _0x2000064
000301 5f29      	SUBI R18,-LOW(7)
000302 c001      	RJMP _0x2000065
                 _0x2000064:
000303 5d29      	SUBI R18,-LOW(39)
                 _0x2000065:
                 _0x2000063:
000304 fd04      	SBRC R16,4
000305 c019      	RJMP _0x2000067
000306 3321      	CPI  R18,49
000307 f420      	BRSH _0x2000069
000308 85a8      	LDD  R26,Y+8
000309 85b9      	LDD  R27,Y+8+1
00030a 9711      	SBIW R26,1
00030b f409      	BRNE _0x2000068
                 _0x2000069:
00030c c009      	RJMP _0x20000D3
                 _0x2000068:
00030d 1753      	CP   R21,R19
00030e f010      	BRLO _0x200006D
00030f ff00      	SBRS R16,0
000310 c001      	RJMP _0x200006E
                 _0x200006D:
000311 c011      	RJMP _0x200006C
                 _0x200006E:
000312 e220      	LDI  R18,LOW(32)
000313 ff07      	SBRS R16,7
000314 c00a      	RJMP _0x200006F
000315 e320      	LDI  R18,LOW(48)
                 _0x20000D3:
000316 6100      	ORI  R16,LOW(16)
000317 ff02      	SBRS R16,2
000318 c006      	RJMP _0x2000070
000319 7f0b      	ANDI R16,LOW(251)
00031a 934a      	ST   -Y,R20
00031b d0a9      	RCALL SUBOPT_0x8
00031c 3050      	CPI  R21,0
00031d f009      	BREQ _0x2000071
00031e 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
00031f d098      	RCALL SUBOPT_0x6
000320 3050      	CPI  R21,0
000321 f009      	BREQ _0x2000072
000322 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
000323 5031      	SUBI R19,LOW(1)
000324 85a8      	LDD  R26,Y+8
000325 85b9      	LDD  R27,Y+8+1
000326 9712      	SBIW R26,2
000327 f008      	BRLO _0x200005F
000328 cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
000329 ff00      	SBRS R16,0
00032a c007      	RJMP _0x2000073
                 _0x2000074:
00032b 3050      	CPI  R21,0
00032c f029      	BREQ _0x2000076
00032d 5051      	SUBI R21,LOW(1)
00032e e2e0      	LDI  R30,LOW(32)
00032f 93ea      	ST   -Y,R30
000330 d094      	RCALL SUBOPT_0x8
000331 cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
000332 e010      	LDI  R17,LOW(0)
                 _0x2000021:
000333 ceea      	RJMP _0x200001C
                 _0x200001E:
000334 85ac      	LDD  R26,Y+12
000335 85bd      	LDD  R27,Y+12+1
000336 91ed      	LD   R30,X+
000337 91fd      	LD   R31,X+
000338 d0a3      	RCALL __LOADLOCR6
000339 9664      	ADIW R28,20
00033a 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
00033b 92ff      	PUSH R15
00033c 2ef8      	MOV  R15,R24
00033d 9726      	SBIW R28,6
00033e 931a      	ST   -Y,R17
00033f 930a      	ST   -Y,R16
000340 01de      	MOVW R26,R28
000341 9614      	ADIW R26,4
                +
000342 2400     +CLR R0
000343 0daf     +ADD R26 , R15
000344 1db0     +ADC R27 , R0
                 	__ADDW2R15
000345 018d      	MOVW R16,R26
000346 e0e0      	LDI  R30,LOW(0)
000347 83ec      	STD  Y+4,R30
000348 83ed      	STD  Y+4+1,R30
000349 83ee      	STD  Y+6,R30
00034a 83ef      	STD  Y+6+1,R30
00034b 01de      	MOVW R26,R28
00034c 9618      	ADIW R26,8
                +
00034d 2400     +CLR R0
00034e 0daf     +ADD R26 , R15
00034f 1db0     +ADC R27 , R0
                 	__ADDW2R15
000350 91ed      	LD   R30,X+
000351 91fd      	LD   R31,X+
000352 93fa      	ST   -Y,R31
000353 93ea      	ST   -Y,R30
000354 931a      	ST   -Y,R17
000355 930a      	ST   -Y,R16
000356 e0e5      	LDI  R30,LOW(_put_usart_G100)
000357 e0f2      	LDI  R31,HIGH(_put_usart_G100)
000358 93fa      	ST   -Y,R31
000359 93ea      	ST   -Y,R30
00035a 01de      	MOVW R26,R28
00035b 9618      	ADIW R26,8
00035c deb6      	RCALL __print_G100
00035d 8119      	LDD  R17,Y+1
00035e 8108      	LDD  R16,Y+0
00035f 9628      	ADIW R28,8
000360 90ff      	POP  R15
000361 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 _rand:
                 ; .FSTART _rand
000362 91e0 0200 	LDS  R30,__seed_G101
000364 91f0 0201 	LDS  R31,__seed_G101+1
000366 9160 0202 	LDS  R22,__seed_G101+2
000368 9170 0203 	LDS  R23,__seed_G101+3
                +
00036a e6ad     +LDI R26 , LOW ( 0x41C64E6D )
00036b e4be     +LDI R27 , HIGH ( 0x41C64E6D )
00036c ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
00036d e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
00036e d078      	RCALL __MULD12U
                +
00036f 59ee     +SUBI R30 , LOW ( - 30562 )
000370 48f8     +SBCI R31 , HIGH ( - 30562 )
000371 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
000372 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
000373 93e0 0200 	STS  __seed_G101,R30
000375 93f0 0201 	STS  __seed_G101+1,R31
000377 9360 0202 	STS  __seed_G101+2,R22
000379 9370 0203 	STS  __seed_G101+3,R23
00037b 01fb      	movw r30,r22
00037c 77ff      	andi r31,0x7F
00037d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00037e 93ba      	ST   -Y,R27
00037f 93aa      	ST   -Y,R26
000380 91a9          ld   r26,y+
000381 91b9          ld   r27,y+
000382 27ee          clr  r30
000383 27ff          clr  r31
                 strlen0:
000384 916d          ld   r22,x+
000385 2366          tst  r22
000386 f011          breq strlen1
000387 9631          adiw r30,1
000388 cffb          rjmp strlen0
                 strlen1:
000389 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00038a 93ba      	ST   -Y,R27
00038b 93aa      	ST   -Y,R26
00038c 27aa          clr  r26
00038d 27bb          clr  r27
00038e 91e9          ld   r30,y+
00038f 91f9          ld   r31,y+
                 strlenf0:
000390 9005      	lpm  r0,z+
000391 2000          tst  r0
000392 f011          breq strlenf1
000393 9611          adiw r26,1
000394 cffb          rjmp strlenf0
                 strlenf1:
000395 01fd          movw r30,r26
000396 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 __seed_G101:
000200           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000397 93fa      	ST   -Y,R31
000398 93ea      	ST   -Y,R30
000399 01f8      	MOVW R30,R16
00039a 2766      	CLR  R22
00039b 2777      	CLR  R23
00039c d08f      	RCALL __PUTPARD1
00039d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
00039e 985c      	CBI  0xB,4
00039f e3a2      	LDI  R26,LOW(50)
0003a0 e0b0      	LDI  R27,0
0003a1 d08f      	RCALL _delay_ms
0003a2 cdb1      	RJMP _read_light
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
0003a3 01f9      	MOVW R30,R18
0003a4 2766      	CLR  R22
0003a5 2777      	CLR  R23
0003a6 d085      	RCALL __PUTPARD1
0003a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
0003a8 9a5c      	SBI  0xB,4
0003a9 e6a4      	LDI  R26,LOW(100)
0003aa e0b0      	LDI  R27,0
0003ab c085      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
0003ac dfb5      	RCALL _rand
0003ad 01df      	MOVW R26,R30
0003ae e2ec      	LDI  R30,LOW(300)
0003af e0f1      	LDI  R31,HIGH(300)
0003b0 d069      	RCALL __MODW21
0003b1 83e8      	ST   Y,R30
0003b2 83f9      	STD  Y+1,R31
0003b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0003b4 019f      	MOVW R18,R30
0003b5 e3a2      	LDI  R26,LOW(50)
0003b6 e0b0      	LDI  R27,0
0003b7 c079      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x6:
0003b8 932a      	ST   -Y,R18
0003b9 85ad      	LDD  R26,Y+13
0003ba 85be      	LDD  R27,Y+13+1
0003bb 85ef      	LDD  R30,Y+15
0003bc 89f8      	LDD  R31,Y+15+1
0003bd 9509      	ICALL
0003be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x7:
0003bf 89e8      	LDD  R30,Y+16
0003c0 89f9      	LDD  R31,Y+16+1
0003c1 9734      	SBIW R30,4
0003c2 8be8      	STD  Y+16,R30
0003c3 8bf9      	STD  Y+16+1,R31
0003c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
0003c5 85ad      	LDD  R26,Y+13
0003c6 85be      	LDD  R27,Y+13+1
0003c7 85ef      	LDD  R30,Y+15
0003c8 89f8      	LDD  R31,Y+15+1
0003c9 9509      	ICALL
0003ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
0003cb 89a8      	LDD  R26,Y+16
0003cc 89b9      	LDD  R27,Y+16+1
0003cd 9614      	ADIW R26,4
0003ce 91ed      	LD   R30,X+
0003cf 91fd      	LD   R31,X+
0003d0 83ee      	STD  Y+6,R30
0003d1 83ff      	STD  Y+6+1,R31
0003d2 81ae      	LDD  R26,Y+6
0003d3 81bf      	LDD  R27,Y+6+1
0003d4 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0003d5 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003d6 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003d7 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003d8 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003d9 931a      	ST   -Y,R17
0003da 930a      	ST   -Y,R16
0003db 9508      	RET
                 
                 __LOADLOCR6:
0003dc 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003dd 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003de 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003df 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003e0 8119      	LDD  R17,Y+1
0003e1 8108      	LD   R16,Y
0003e2 9508      	RET
                 
                 __ANEGW1:
0003e3 95f1      	NEG  R31
0003e4 95e1      	NEG  R30
0003e5 40f0      	SBCI R31,0
0003e6 9508      	RET
                 
                 __MULD12U:
0003e7 9f7a      	MUL  R23,R26
0003e8 2d70      	MOV  R23,R0
0003e9 9f6b      	MUL  R22,R27
0003ea 0d70      	ADD  R23,R0
0003eb 9ff8      	MUL  R31,R24
0003ec 0d70      	ADD  R23,R0
0003ed 9fe9      	MUL  R30,R25
0003ee 0d70      	ADD  R23,R0
0003ef 9f6a      	MUL  R22,R26
0003f0 2d60      	MOV  R22,R0
0003f1 0d71      	ADD  R23,R1
0003f2 9ffb      	MUL  R31,R27
0003f3 0d60      	ADD  R22,R0
0003f4 1d71      	ADC  R23,R1
0003f5 9fe8      	MUL  R30,R24
0003f6 0d60      	ADD  R22,R0
0003f7 1d71      	ADC  R23,R1
0003f8 2788      	CLR  R24
0003f9 9ffa      	MUL  R31,R26
0003fa 2df0      	MOV  R31,R0
0003fb 0d61      	ADD  R22,R1
0003fc 1f78      	ADC  R23,R24
0003fd 9feb      	MUL  R30,R27
0003fe 0df0      	ADD  R31,R0
0003ff 1d61      	ADC  R22,R1
000400 1f78      	ADC  R23,R24
000401 9fea      	MUL  R30,R26
000402 2de0      	MOV  R30,R0
000403 0df1      	ADD  R31,R1
000404 1f68      	ADC  R22,R24
000405 1f78      	ADC  R23,R24
000406 9508      	RET
                 
                 __DIVW21U:
000407 2400      	CLR  R0
000408 2411      	CLR  R1
000409 e190      	LDI  R25,16
                 __DIVW21U1:
00040a 0faa      	LSL  R26
00040b 1fbb      	ROL  R27
00040c 1c00      	ROL  R0
00040d 1c11      	ROL  R1
00040e 1a0e      	SUB  R0,R30
00040f 0a1f      	SBC  R1,R31
000410 f418      	BRCC __DIVW21U2
000411 0e0e      	ADD  R0,R30
000412 1e1f      	ADC  R1,R31
000413 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000414 60a1      	SBR  R26,1
                 __DIVW21U3:
000415 959a      	DEC  R25
000416 f799      	BRNE __DIVW21U1
000417 01fd      	MOVW R30,R26
000418 01d0      	MOVW R26,R0
000419 9508      	RET
                 
                 __MODW21:
00041a 94e8      	CLT
00041b ffb7      	SBRS R27,7
00041c c004      	RJMP __MODW211
00041d 95b1      	NEG  R27
00041e 95a1      	NEG  R26
00041f 40b0      	SBCI R27,0
000420 9468      	SET
                 __MODW211:
000421 fdf7      	SBRC R31,7
000422 dfc0      	RCALL __ANEGW1
000423 dfe3      	RCALL __DIVW21U
000424 01fd      	MOVW R30,R26
000425 f40e      	BRTC __MODW212
000426 dfbc      	RCALL __ANEGW1
                 __MODW212:
000427 9508      	RET
                 
                 __GETW1PF:
000428 9005      	LPM  R0,Z+
000429 91f4      	LPM  R31,Z
00042a 2de0      	MOV  R30,R0
00042b 9508      	RET
                 
                 __PUTPARD1:
00042c 937a      	ST   -Y,R23
00042d 936a      	ST   -Y,R22
00042e 93fa      	ST   -Y,R31
00042f 93ea      	ST   -Y,R30
000430 9508      	RET
                 
                 _delay_ms:
000431 9610      	adiw r26,0
000432 f039      	breq __delay_ms1
                 __delay_ms0:
000433 95a8      	wdr
                +
000434 e888     +LDI R24 , LOW ( 0x1388 )
000435 e193     +LDI R25 , HIGH ( 0x1388 )
                +__DELAY_USW_LOOP :
000436 9701     +SBIW R24 , 1
000437 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x1388
000438 9711      	sbiw r26,1
000439 f7c9      	brne __delay_ms0
                 __delay_ms1:
00043a 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega164A register use summary:
r0 :  28 r1 :  11 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  46 r17:  34 r18:  35 r19:  15 r20:   9 r21:  20 r22:  27 r23:  20 
r24:  23 r25:   7 r26:  82 r27:  43 r28:  19 r29:   1 r30: 231 r31:  83 
x  :  25 y  : 159 z  :  13 
Registers used: 22 out of 35 (62.9%)

ATmega164A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  10 add   :  14 
adiw  :  24 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  16 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   1 brmi  :   0 brne  :  25 brpl  :   1 brsh  :   2 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   4 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  19 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   3 cpi   :  32 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   0 jmp   :  32 ld    :  27 ldd   :  67 ldi   : 111 
lds   :  10 lpm   :  14 lsl   :   1 lsr   :   0 mov   :  21 movw  :  24 
mul   :  11 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   0 
ori   :   9 out   :  22 pop   :   2 push  :   2 rcall :  67 ret   :  27 
reti  :   0 rjmp  :  63 rol   :   3 ror   :   0 sbc   :   5 sbci  :   6 
sbi   :   4 sbic  :   0 sbis  :   1 sbiw  :  17 sbr   :   1 sbrc  :   3 
sbrs  :  11 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  57 std   :  34 sts   :  43 sub   :   4 subi  :  16 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 58 out of 116 (50.0%)

ATmega164A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000876   1974    192   2166   16384  13.2%
[.dseg] 0x000100 0x000204      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
