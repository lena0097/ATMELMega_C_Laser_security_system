
AVRASM ver. 2.1.30  D:\1code\ATMELMega_C_Laser_security_system\Firmware-security\Debug\List\firmware.asm Sat May 13 22:10:25 2023

                 
                 
                 ;CodeVisionAVR C Compiler V3.51 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega164A
                 ;Program type           : Application
                 ;Clock frequency        : 20.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega164A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x04FF
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0095 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00003e 2710
00003f 03e8
000040 0064
000041 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000042 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000043 1000
000044 0100
000045 0010
000046 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000047 6f63
000048 6e75
000049 6574
00004a 2072      	.DB  0x63,0x6F,0x75,0x6E,0x74,0x65,0x72,0x20
00004b 6176
00004c 756c
00004d 2065
00004e 7369      	.DB  0x76,0x61,0x6C,0x75,0x65,0x20,0x69,0x73
00004f 203a
000050 7525
000051 0a20
000052 6500      	.DB  0x3A,0x20,0x25,0x75,0x20,0xA,0x0,0x65
000053 766e
000054 6c20
000055 6769
000056 7468      	.DB  0x6E,0x76,0x20,0x6C,0x69,0x67,0x68,0x74
000057 6920
000058 3a73
000059 2520
00005a 2c64      	.DB  0x20,0x69,0x73,0x3A,0x20,0x25,0x64,0x2C
00005b 6c20
00005c 6769
00005d 7468
00005e 635f      	.DB  0x20,0x6C,0x69,0x67,0x68,0x74,0x5F,0x63
00005f 6568
000060 6b63
000061 6920
000062 2073      	.DB  0x68,0x65,0x63,0x6B,0x20,0x69,0x73,0x20
000063 6425
000064 6c00
000065 6769
000066 7468      	.DB  0x25,0x64,0x0,0x6C,0x69,0x67,0x68,0x74
000067 6c20
000068 7665
000069 6c65
00006a 6420      	.DB  0x20,0x6C,0x65,0x76,0x65,0x6C,0x20,0x64
00006b 6669
00006c 2066
00006d 7369
00006e 203a      	.DB  0x69,0x66,0x66,0x20,0x69,0x73,0x3A,0x20
00006f 6425
000070 0a20
000071 7300
000072 6e65      	.DB  0x25,0x64,0x20,0xA,0x0,0x73,0x65,0x6E
000073 6f73
000074 2072
000075 696c
000076 6867      	.DB  0x73,0x6F,0x72,0x20,0x6C,0x69,0x67,0x68
000077 3a74
000078 2520
000079 2075
00007a 2c0a      	.DB  0x74,0x3A,0x20,0x25,0x75,0x20,0xA,0x2C
00007b 7220
00007c 6e61
00007d 6f64
00007e 5f6d      	.DB  0x20,0x72,0x61,0x6E,0x64,0x6F,0x6D,0x5F
00007f 6863
000080 6365
000081 3a6b
000082 2520      	.DB  0x63,0x68,0x65,0x63,0x6B,0x3A,0x20,0x25
000083 0064
000084 4152
000085 444e
000086 4d4f      	.DB  0x64,0x0,0x52,0x41,0x4E,0x44,0x4F,0x4D
000087 4320
000088 4548
000089 4b43
00008a 0021      	.DB  0x20,0x43,0x48,0x45,0x43,0x4B,0x21,0x0
                 _0x2020060:
D:\1code\ATMELMega_C_Laser_security_system\Firmware-security\Debug\List\firmware.asm(1486): warning: .cseg .db misalignment - padding zero byte
00008b 0001      	.DB  0x1
                 _0x2020000:
00008c 4e2d
00008d 4e41
00008e 4900
00008f 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\1code\ATMELMega_C_Laser_security_system\Firmware-security\Debug\List\firmware.asm(1489): warning: .cseg .db misalignment - padding zero byte
000090 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000091 0001      	.DW  0x01
000092 0200      	.DW  __seed_G101
000093 0116      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000094 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000095 94f8      	CLI
000096 27ee      	CLR  R30
000097 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000098 e0f1      	LDI  R31,1
000099 bff5      	OUT  MCUCR,R31
00009a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00009b e08d      	LDI  R24,(14-2)+1
00009c e0a2      	LDI  R26,2
00009d 27bb      	CLR  R27
                 __CLEAR_REG:
00009e 93ed      	ST   X+,R30
00009f 958a      	DEC  R24
0000a0 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000a1 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000a2 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000a3 e0a0      	LDI  R26,LOW(__SRAM_START)
0000a4 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000a5 93ed      	ST   X+,R30
0000a6 9701      	SBIW R24,1
0000a7 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000a8 e2e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000a9 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000aa 9185      	LPM  R24,Z+
0000ab 9195      	LPM  R25,Z+
0000ac 9700      	SBIW R24,0
0000ad f061      	BREQ __GLOBAL_INI_END
0000ae 91a5      	LPM  R26,Z+
0000af 91b5      	LPM  R27,Z+
0000b0 9005      	LPM  R0,Z+
0000b1 9015      	LPM  R1,Z+
0000b2 01bf      	MOVW R22,R30
0000b3 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000b4 9005      	LPM  R0,Z+
0000b5 920d      	ST   X+,R0
0000b6 9701      	SBIW R24,1
0000b7 f7e1      	BRNE __GLOBAL_INI_LOOP
0000b8 01fb      	MOVW R30,R22
0000b9 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0000ba e0e0      	LDI  R30,__GPIOR0_INIT
0000bb bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000bc efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000bd bfed      	OUT  SPL,R30
0000be e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000bf bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000c0 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000c1 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000c2 940c 01b0 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x200
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _heartbeat_mcu:
                 ; .FSTART _heartbeat_mcu
0000c4 985e      	CBI  0xB,6
0000c5 e1a9      	LDI  R26,LOW(25)
0000c6 e0b0      	LDI  R27,0
0000c7 d355      	RCALL _delay_ms
0000c8 9a5e      	SBI  0xB,6
0000c9 e1a9      	LDI  R26,LOW(25)
0000ca e0b0      	LDI  R27,0
0000cb d351      	RCALL _delay_ms
0000cc 9508      	RET
                 ; .FEND
                 _initialise_mcu:
                 ; .FSTART _initialise_mcu
0000cd e8e0      	LDI  R30,LOW(128)
0000ce 93e0 0061 	STS  97,R30
0000d0 e0e0      	LDI  R30,LOW(0)
0000d1 93e0 0061 	STS  97,R30
0000d3 b9e1      	OUT  0x1,R30
0000d4 b9e2      	OUT  0x2,R30
0000d5 b9e4      	OUT  0x4,R30
0000d6 b9e5      	OUT  0x5,R30
0000d7 b9e7      	OUT  0x7,R30
0000d8 b9e8      	OUT  0x8,R30
0000d9 e5e8      	LDI  R30,LOW(88)
0000da b9ea      	OUT  0xA,R30
0000db e0e0      	LDI  R30,LOW(0)
0000dc b9eb      	OUT  0xB,R30
0000dd bde4      	OUT  0x24,R30
0000de bde5      	OUT  0x25,R30
0000df bde6      	OUT  0x26,R30
0000e0 bde7      	OUT  0x27,R30
0000e1 bde8      	OUT  0x28,R30
0000e2 93e0 0080 	STS  128,R30
0000e4 93e0 0081 	STS  129,R30
0000e6 93e0 0085 	STS  133,R30
0000e8 93e0 0084 	STS  132,R30
0000ea 93e0 0087 	STS  135,R30
0000ec 93e0 0086 	STS  134,R30
0000ee 93e0 0089 	STS  137,R30
0000f0 93e0 0088 	STS  136,R30
0000f2 93e0 008b 	STS  139,R30
0000f4 93e0 008a 	STS  138,R30
0000f6 93e0 00b6 	STS  182,R30
0000f8 93e0 00b0 	STS  176,R30
0000fa 93e0 00b1 	STS  177,R30
0000fc 93e0 00b2 	STS  178,R30
0000fe 93e0 00b3 	STS  179,R30
000100 93e0 00b4 	STS  180,R30
000102 93e0 006e 	STS  110,R30
000104 93e0 006f 	STS  111,R30
000106 93e0 0070 	STS  112,R30
000108 93e0 0069 	STS  105,R30
00010a bbed      	OUT  0x1D,R30
00010b 93e0 0068 	STS  104,R30
00010d 93e0 00c0 	STS  192,R30
00010f e0e8      	LDI  R30,LOW(8)
000110 93e0 00c1 	STS  193,R30
000112 e0e6      	LDI  R30,LOW(6)
000113 93e0 00c2 	STS  194,R30
000115 e0e0      	LDI  R30,LOW(0)
000116 93e0 00c5 	STS  197,R30
000118 e8e1      	LDI  R30,LOW(129)
000119 93e0 00c4 	STS  196,R30
00011b e0e0      	LDI  R30,LOW(0)
00011c 93e0 00c9 	STS  201,R30
00011e e8e0      	LDI  R30,LOW(128)
00011f bfe0      	OUT  0x30,R30
000120 e0e0      	LDI  R30,LOW(0)
000121 93e0 007f 	STS  127,R30
000123 e0e1      	LDI  R30,LOW(1)
000124 93e0 007e 	STS  126,R30
000126 e4e0      	LDI  R30,LOW(64)
000127 93e0 007c 	STS  124,R30
000129 eae5      	LDI  R30,LOW(165)
00012a 93e0 007a 	STS  122,R30
00012c e0e0      	LDI  R30,LOW(0)
00012d 93e0 007b 	STS  123,R30
00012f bdec      	OUT  0x2C,R30
000130 93e0 00bc 	STS  188,R30
000132 e0e0      	LDI  R30,LOW(0)
000133 e0f0      	LDI  R31,HIGH(0)
000134 9508      	RET
                 ; .FEND
                 _read_voltage:
                 ; .FSTART _read_voltage
000135 931a      	ST   -Y,R17
000136 2f1a      	MOV  R17,R26
                 ;	channel -> R17
000137 2fe1      	MOV  R30,R17
000138 64e0      	ORI  R30,0x40
000139 93e0 007c 	STS  124,R30
00013b 91e0 007a 	LDS  R30,122
00013d 64e0      	ORI  R30,0x40
00013e 93e0 007a 	STS  122,R30
                 _0x7:
000140 91e0 007a 	LDS  R30,122
000142 71e0      	ANDI R30,LOW(0x10)
000143 f3e1      	BREQ _0x7
000144 91e0 007a 	LDS  R30,122
000146 61e0      	ORI  R30,0x10
000147 93e0 007a 	STS  122,R30
000149 91e0 0078 	LDS  R30,120
00014b 91f0 0079 	LDS  R31,120+1
00014d c0a9      	RJMP _0x20A0001
                 ; .FEND
                 _read_light:
                 ; .FSTART _read_light
00014e 931a      	ST   -Y,R17
00014f 930a      	ST   -Y,R16
                 ;	light_level -> R16,R17
000150 e0a0      	LDI  R26,LOW(0)
000151 dfe3      	RCALL _read_voltage
000152 018f      	MOVW R16,R30
000153 c014      	RJMP _0x20A0003
                 ; .FEND
                 _ring_alarm:
                 ; .FSTART _ring_alarm
000154 931a      	ST   -Y,R17
000155 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
000156 e000     +LDI R16 , LOW ( 0 )
000157 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xB:
                +
000158 3004     +CPI R16 , LOW ( 4 )
000159 e0e0     +LDI R30 , HIGH ( 4 )
00015a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
00015b f45c      	BRGE _0xC
00015c 985b      	CBI  0xB,3
00015d eca8      	LDI  R26,LOW(200)
00015e e0b0      	LDI  R27,0
00015f d2bd      	RCALL _delay_ms
000160 9a5b      	SBI  0xB,3
000161 eca8      	LDI  R26,LOW(200)
000162 e0b0      	LDI  R27,0
000163 d2b9      	RCALL _delay_ms
                +
000164 5f0f     +SUBI R16 , LOW ( - 1 )
000165 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000166 cff1      	RJMP _0xB
                 _0xC:
000167 985b      	CBI  0xB,3
                 _0x20A0003:
000168 9109      	LD   R16,Y+
000169 9119      	LD   R17,Y+
00016a 9508      	RET
                 ; .FEND
                 _laser_spoof_check:
                 ; .FSTART _laser_spoof_check
00016b d257      	RCALL __SAVELOCR4
00016c 018d      	MOVW R16,R26
                +
00016d 812c     +LDD R18 , Y + 4
00016e 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
                 ;	env_light -> R18,R19
                 ;	*counter -> R16,R17
00016f 91ac      	LD   R26,X
000170 33ac      	CPI  R26,LOW(0x3C)
000171 f5b1      	BRNE _0x13
000172 9722      	SBIW R28,2
000173 e0e0      	LDI  R30,LOW(0)
000174 83e8      	ST   Y,R30
000175 83e9      	STD  Y+1,R30
                 ;	light_check -> Y+0
                +
000176 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000177 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000178 d212      	RCALL SUBOPT_0x0
000179 e084      	LDI  R24,4
00017a d1b4      	RCALL _printf
00017b 9626      	ADIW R28,6
00017c d215      	RCALL SUBOPT_0x1
00017d 83e8      	ST   Y,R30
00017e 83f9      	STD  Y+1,R31
                +
00017f eae5     +LDI R30 , LOW ( 2 * _0x0 + ( 23 ) )
000180 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 23 ) )
                 	__POINTW1FN _0x0,23
000181 93fa      	ST   -Y,R31
000182 93ea      	ST   -Y,R30
000183 01f9      	MOVW R30,R18
000184 2766      	CLR  R22
000185 2777      	CLR  R23
000186 d291      	RCALL __PUTPARD1
000187 81ee      	LDD  R30,Y+6
000188 81ff      	LDD  R31,Y+6+1
000189 2766      	CLR  R22
00018a 2777      	CLR  R23
00018b d20b      	RCALL SUBOPT_0x2
                +
00018c ece9     +LDI R30 , LOW ( 2 * _0x0 + ( 59 ) )
00018d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 59 ) )
                 	__POINTW1FN _0x0,59
00018e 93fa      	ST   -Y,R31
00018f 93ea      	ST   -Y,R30
000190 81ea      	LDD  R30,Y+2
000191 81fb      	LDD  R31,Y+2+1
000192 1be2      	SUB  R30,R18
000193 0bf3      	SBC  R31,R19
000194 2766      	CLR  R22
000195 2777      	CLR  R23
000196 d281      	RCALL __PUTPARD1
000197 e084      	LDI  R24,4
000198 d196      	RCALL _printf
000199 9626      	ADIW R28,6
00019a 81a8      	LD   R26,Y
00019b 81b9      	LDD  R27,Y+1
00019c 1ba2      	SUB  R26,R18
00019d 0bb3      	SBC  R27,R19
00019e 97d3      	SBIW R26,51
00019f f01c      	BRLT _0x16
0001a0 e0e1      	LDI  R30,LOW(1)
0001a1 9622      	ADIW R28,2
0001a2 c00a      	RJMP _0x20A0002
                 _0x16:
0001a3 9a5c      	SBI  0xB,4
0001a4 01d8      	MOVW R26,R16
0001a5 e0e0      	LDI  R30,LOW(0)
0001a6 93ec      	ST   X,R30
0001a7 9622      	ADIW R28,2
                 _0x13:
0001a8 01d8      	MOVW R26,R16
0001a9 91ec      	LD   R30,X
0001aa 5fef      	SUBI R30,-LOW(1)
0001ab 93ec      	ST   X,R30
0001ac e0e0      	LDI  R30,LOW(0)
                 _0x20A0002:
0001ad d21c      	RCALL __LOADLOCR4
0001ae 9626      	ADIW R28,6
0001af 9508      	RET
                 ; .FEND
                 ;void main(void) {
                 ; 0000 000A void main(void) {
                 _main:
                 ; .FSTART _main
                 ; 0000 000B 
                 ; 0000 000C unsigned int light = 0;
                 ; 0000 000D unsigned int env_light = 0;
                 ; 0000 000E char counter = 0;
                 ; 0000 000F int random_check = rand() % 300;
                 ; 0000 0010 
                 ; 0000 0011 initialise_mcu();
0001b0 9722      	SBIW R28,2
                 ;	light -> R16,R17
                 ;	env_light -> R18,R19
                 ;	counter -> R21
                 ;	random_check -> Y+0
                +
0001b1 e000     +LDI R16 , LOW ( 0 )
0001b2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0001b3 e020     +LDI R18 , LOW ( 0 )
0001b4 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0001b5 e050      	LDI  R21,0
0001b6 d1e5      	RCALL SUBOPT_0x3
0001b7 df15      	RCALL _initialise_mcu
                 ; 0000 0012 env_light = read_light();
0001b8 df95      	RCALL _read_light
0001b9 019f      	MOVW R18,R30
                 ; 0000 0013 
                 ; 0000 0014 delay_ms(500);
0001ba efa4      	LDI  R26,LOW(500)
0001bb e0b1      	LDI  R27,HIGH(500)
0001bc d260      	RCALL _delay_ms
                 ; 0000 0015 PORTD.4 = 1;
0001bd 9a5c      	SBI  0xB,4
                 ; 0000 0016 
                 ; 0000 0017 while (1) {
                 _0x1B:
                 ; 0000 0018 
                 ; 0000 0019 light = read_light();
0001be df8f      	RCALL _read_light
0001bf 018f      	MOVW R16,R30
                 ; 0000 001A 
                 ; 0000 001B /* Wait for empty transmit buffer */
                 ; 0000 001C printf("sensor light: %u \n, random_check: %d", light, random_check);
                +
0001c0 eee3     +LDI R30 , LOW ( 2 * _0x0 + ( 85 ) )
0001c1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 85 ) )
                 	__POINTW1FN _0x0,85
0001c2 d1c8      	RCALL SUBOPT_0x0
0001c3 81ee      	LDD  R30,Y+6
0001c4 81ff      	LDD  R31,Y+6+1
                +
0001c5 2f6f     +MOV R22 , R31
0001c6 0f66     +ADD R22 , R22
0001c7 0b66     +SBC R22 , R22
0001c8 2f76     +MOV R23 , R22
                 	__CWD1
0001c9 d1cd      	RCALL SUBOPT_0x2
                 ; 0000 001D 
                 ; 0000 001E if (light < env_light) {
                +
0001ca 1702     +CP R16 , R18
0001cb 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
0001cc f408      	BRSH _0x1E
                 ; 0000 001F ring_alarm();
0001cd df86      	RCALL _ring_alarm
                 ; 0000 0020 }
                 ; 0000 0021 
                 ; 0000 0022 if(laser_spoof_check(env_light, &counter)) {
                 _0x1E:
0001ce 933a      	ST   -Y,R19
0001cf 932a      	ST   -Y,R18
0001d0 b7ad      	IN   R26,SPL
0001d1 b7be      	IN   R27,SPH
0001d2 935f      	PUSH R21
0001d3 df97      	RCALL _laser_spoof_check
0001d4 915f      	POP  R21
0001d5 30e0      	CPI  R30,0
0001d6 f009      	BREQ _0x1F
                 ; 0000 0023 ring_alarm();
0001d7 df7c      	RCALL _ring_alarm
                 ; 0000 0024 }
                 ; 0000 0025 
                 ; 0000 0026 
                 ; 0000 0027 if (random_check == 0) {
                 _0x1F:
0001d8 81e8      	LD   R30,Y
0001d9 81f9      	LDD  R31,Y+1
0001da 9730      	SBIW R30,0
0001db f459      	BRNE _0x20
                 ; 0000 0028 
                 ; 0000 0029 printf("RANDOM CHECK!");
                +
0001dc e0e8     +LDI R30 , LOW ( 2 * _0x0 + ( 122 ) )
0001dd e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 122 ) )
                 	__POINTW1FN _0x0,122
0001de 93fa      	ST   -Y,R31
0001df 93ea      	ST   -Y,R30
0001e0 e080      	LDI  R24,0
0001e1 d14d      	RCALL _printf
0001e2 9622      	ADIW R28,2
                 ; 0000 002A random_check = rand() % 300;
0001e3 d1b8      	RCALL SUBOPT_0x3
                 ; 0000 002B PORTD.4 = 0;
0001e4 d1ad      	RCALL SUBOPT_0x1
                 ; 0000 002C delay_ms(15);
                 ; 0000 002D env_light = read_light();
0001e5 019f      	MOVW R18,R30
                 ; 0000 002E 
                 ; 0000 002F PORTD.4 = 1;
0001e6 9a5c      	SBI  0xB,4
                 ; 0000 0030 }
                 ; 0000 0031 
                 ; 0000 0032 random_check -= 1;
                 _0x20:
0001e7 81e8      	LD   R30,Y
0001e8 81f9      	LDD  R31,Y+1
0001e9 9731      	SBIW R30,1
0001ea 83e8      	ST   Y,R30
0001eb 83f9      	STD  Y+1,R31
                 ; 0000 0033 heartbeat_mcu();
0001ec ded7      	RCALL _heartbeat_mcu
                 ; 0000 0034 
                 ; 0000 0035 }
0001ed cfd0      	RJMP _0x1B
                 ; 0000 0036 }
                 _0x25:
0001ee cfff      	RJMP _0x25
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0001ef 931a      	ST   -Y,R17
0001f0 2f1a      	MOV  R17,R26
                 _0x2000006:
0001f1 91e0 00c0 	LDS  R30,192
0001f3 72e0      	ANDI R30,LOW(0x20)
0001f4 f3e1      	BREQ _0x2000006
0001f5 9310 00c6 	STS  198,R17
                 _0x20A0001:
0001f7 9119      	LD   R17,Y+
0001f8 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0001f9 d1c9      	RCALL __SAVELOCR4
0001fa 018d      	MOVW R16,R26
0001fb 813c      	LDD  R19,Y+4
0001fc 2fa3      	MOV  R26,R19
0001fd dff1      	RCALL _putchar
0001fe 01d8      	MOVW R26,R16
0001ff 91ed      	LD   R30,X+
000200 91fd      	LD   R31,X+
000201 9631      	ADIW R30,1
000202 93fe      	ST   -X,R31
000203 93ee      	ST   -X,R30
000204 d1c5      	RCALL __LOADLOCR4
000205 9625      	ADIW R28,5
000206 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000207 93ba      	ST   -Y,R27
000208 93aa      	ST   -Y,R26
000209 9726      	SBIW R28,6
00020a d1b6      	RCALL __SAVELOCR6
00020b e010      	LDI  R17,0
00020c 85ac      	LDD  R26,Y+12
00020d 85bd      	LDD  R27,Y+12+1
00020e e0e0      	LDI  R30,LOW(0)
00020f e0f0      	LDI  R31,HIGH(0)
000210 93ed      	ST   X+,R30
000211 93fc      	ST   X,R31
                 _0x200001C:
000212 89ea      	LDD  R30,Y+18
000213 89fb      	LDD  R31,Y+18+1
000214 9631      	ADIW R30,1
000215 8bea      	STD  Y+18,R30
000216 8bfb      	STD  Y+18+1,R31
000217 9731      	SBIW R30,1
000218 91e4      	LPM  R30,Z
000219 2f2e      	MOV  R18,R30
00021a 30e0      	CPI  R30,0
00021b f409      	BRNE PC+2
00021c c10b      	RJMP _0x200001E
00021d 2fe1      	MOV  R30,R17
00021e 30e0      	CPI  R30,0
00021f f431      	BRNE _0x2000022
000220 3225      	CPI  R18,37
000221 f411      	BRNE _0x2000023
000222 e011      	LDI  R17,LOW(1)
000223 c001      	RJMP _0x2000024
                 _0x2000023:
000224 d17f      	RCALL SUBOPT_0x4
                 _0x2000024:
000225 c101      	RJMP _0x2000021
                 _0x2000022:
000226 30e1      	CPI  R30,LOW(0x1)
000227 f4a1      	BRNE _0x2000025
000228 3225      	CPI  R18,37
000229 f411      	BRNE _0x2000026
00022a d179      	RCALL SUBOPT_0x4
00022b c0fa      	RJMP _0x20000D2
                 _0x2000026:
00022c e012      	LDI  R17,LOW(2)
00022d e040      	LDI  R20,LOW(0)
00022e e000      	LDI  R16,LOW(0)
00022f 322d      	CPI  R18,45
000230 f411      	BRNE _0x2000027
000231 e001      	LDI  R16,LOW(1)
000232 c0f4      	RJMP _0x2000021
                 _0x2000027:
000233 322b      	CPI  R18,43
000234 f411      	BRNE _0x2000028
000235 e24b      	LDI  R20,LOW(43)
000236 c0f0      	RJMP _0x2000021
                 _0x2000028:
000237 3220      	CPI  R18,32
000238 f411      	BRNE _0x2000029
000239 e240      	LDI  R20,LOW(32)
00023a c0ec      	RJMP _0x2000021
                 _0x2000029:
00023b c002      	RJMP _0x200002A
                 _0x2000025:
00023c 30e2      	CPI  R30,LOW(0x2)
00023d f439      	BRNE _0x200002B
                 _0x200002A:
00023e e050      	LDI  R21,LOW(0)
00023f e013      	LDI  R17,LOW(3)
000240 3320      	CPI  R18,48
000241 f411      	BRNE _0x200002C
000242 6800      	ORI  R16,LOW(128)
000243 c0e3      	RJMP _0x2000021
                 _0x200002C:
000244 c003      	RJMP _0x200002D
                 _0x200002B:
000245 30e3      	CPI  R30,LOW(0x3)
000246 f009      	BREQ PC+2
000247 c0df      	RJMP _0x2000021
                 _0x200002D:
000248 3320      	CPI  R18,48
000249 f010      	BRLO _0x2000030
00024a 332a      	CPI  R18,58
00024b f008      	BRLO _0x2000031
                 _0x2000030:
00024c c007      	RJMP _0x200002F
                 _0x2000031:
00024d e0aa      	LDI  R26,LOW(10)
00024e 9f5a      	MUL  R21,R26
00024f 2d50      	MOV  R21,R0
000250 2fe2      	MOV  R30,R18
000251 53e0      	SUBI R30,LOW(48)
000252 0f5e      	ADD  R21,R30
000253 c0d3      	RJMP _0x2000021
                 _0x200002F:
000254 2fe2      	MOV  R30,R18
000255 36e3      	CPI  R30,LOW(0x63)
000256 f439      	BRNE _0x2000035
000257 d153      	RCALL SUBOPT_0x5
000258 89e8      	LDD  R30,Y+16
000259 89f9      	LDD  R31,Y+16+1
00025a 81a4      	LDD  R26,Z+4
00025b 93aa      	ST   -Y,R26
00025c d154      	RCALL SUBOPT_0x6
00025d c0c8      	RJMP _0x2000036
                 _0x2000035:
00025e 37e3      	CPI  R30,LOW(0x73)
00025f f429      	BRNE _0x2000038
000260 d14a      	RCALL SUBOPT_0x5
000261 d155      	RCALL SUBOPT_0x7
000262 d10f      	RCALL _strlen
000263 2f1e      	MOV  R17,R30
000264 c007      	RJMP _0x2000039
                 _0x2000038:
000265 37e0      	CPI  R30,LOW(0x70)
000266 f449      	BRNE _0x200003B
000267 d143      	RCALL SUBOPT_0x5
000268 d14e      	RCALL SUBOPT_0x7
000269 d114      	RCALL _strlenf
00026a 2f1e      	MOV  R17,R30
00026b 6008      	ORI  R16,LOW(8)
                 _0x2000039:
00026c 6002      	ORI  R16,LOW(2)
00026d 770f      	ANDI R16,LOW(127)
00026e e030      	LDI  R19,LOW(0)
00026f c03a      	RJMP _0x200003C
                 _0x200003B:
000270 36e4      	CPI  R30,LOW(0x64)
000271 f011      	BREQ _0x200003F
000272 36e9      	CPI  R30,LOW(0x69)
000273 f411      	BRNE _0x2000040
                 _0x200003F:
000274 6004      	ORI  R16,LOW(4)
000275 c002      	RJMP _0x2000041
                 _0x2000040:
000276 37e5      	CPI  R30,LOW(0x75)
000277 f431      	BRNE _0x2000042
                 _0x2000041:
000278 e7ec      	LDI  R30,LOW(_tbl10_G100*2)
000279 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00027a 83ee      	STD  Y+6,R30
00027b 83ff      	STD  Y+6+1,R31
00027c e015      	LDI  R17,LOW(5)
00027d c00c      	RJMP _0x2000043
                 _0x2000042:
00027e 35e8      	CPI  R30,LOW(0x58)
00027f f411      	BRNE _0x2000045
000280 6008      	ORI  R16,LOW(8)
000281 c003      	RJMP _0x2000046
                 _0x2000045:
000282 37e8      	CPI  R30,LOW(0x78)
000283 f009      	BREQ PC+2
000284 c0a1      	RJMP _0x2000077
                 _0x2000046:
000285 e8e6      	LDI  R30,LOW(_tbl16_G100*2)
000286 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000287 83ee      	STD  Y+6,R30
000288 83ff      	STD  Y+6+1,R31
000289 e014      	LDI  R17,LOW(4)
                 _0x2000043:
00028a ff02      	SBRS R16,2
00028b c015      	RJMP _0x2000048
00028c d11e      	RCALL SUBOPT_0x5
00028d 89a8      	LDD  R26,Y+16
00028e 89b9      	LDD  R27,Y+16+1
00028f 9614      	ADIW R26,4
000290 91ed      	LD   R30,X+
000291 91fd      	LD   R31,X+
000292 87ea      	STD  Y+10,R30
000293 87fb      	STD  Y+10+1,R31
000294 85ab      	LDD  R26,Y+11
000295 23aa      	TST  R26
000296 f422      	BRPL _0x2000049
000297 d137      	RCALL __ANEGW1
000298 87ea      	STD  Y+10,R30
000299 87fb      	STD  Y+10+1,R31
00029a e24d      	LDI  R20,LOW(45)
                 _0x2000049:
00029b 3040      	CPI  R20,0
00029c f011      	BREQ _0x200004A
00029d 5f1f      	SUBI R17,-LOW(1)
00029e c001      	RJMP _0x200004B
                 _0x200004A:
00029f 7f0b      	ANDI R16,LOW(251)
                 _0x200004B:
0002a0 c009      	RJMP _0x200004C
                 _0x2000048:
0002a1 d109      	RCALL SUBOPT_0x5
0002a2 89a8      	LDD  R26,Y+16
0002a3 89b9      	LDD  R27,Y+16+1
0002a4 9614      	ADIW R26,4
                +
0002a5 91ed     +LD R30 , X +
0002a6 91fc     +LD R31 , X
0002a7 9711     +SBIW R26 , 1
                 	__GETW1P
0002a8 87ea      	STD  Y+10,R30
0002a9 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
0002aa fd00      	SBRC R16,0
0002ab c010      	RJMP _0x200004D
                 _0x200004E:
0002ac 1715      	CP   R17,R21
0002ad f470      	BRSH _0x2000050
0002ae ff07      	SBRS R16,7
0002af c008      	RJMP _0x2000051
0002b0 ff02      	SBRS R16,2
0002b1 c004      	RJMP _0x2000052
0002b2 7f0b      	ANDI R16,LOW(251)
0002b3 2f24      	MOV  R18,R20
0002b4 5011      	SUBI R17,LOW(1)
0002b5 c001      	RJMP _0x2000053
                 _0x2000052:
0002b6 e320      	LDI  R18,LOW(48)
                 _0x2000053:
0002b7 c001      	RJMP _0x2000054
                 _0x2000051:
0002b8 e220      	LDI  R18,LOW(32)
                 _0x2000054:
0002b9 d0ea      	RCALL SUBOPT_0x4
0002ba 5051      	SUBI R21,LOW(1)
0002bb cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
0002bc 2f31      	MOV  R19,R17
0002bd ff01      	SBRS R16,1
0002be c016      	RJMP _0x2000055
                 _0x2000056:
0002bf 3030      	CPI  R19,0
0002c0 f099      	BREQ _0x2000058
0002c1 ff03      	SBRS R16,3
0002c2 c006      	RJMP _0x2000059
0002c3 81ee      	LDD  R30,Y+6
0002c4 81ff      	LDD  R31,Y+6+1
0002c5 9125      	LPM  R18,Z+
0002c6 83ee      	STD  Y+6,R30
0002c7 83ff      	STD  Y+6+1,R31
0002c8 c005      	RJMP _0x200005A
                 _0x2000059:
0002c9 81ae      	LDD  R26,Y+6
0002ca 81bf      	LDD  R27,Y+6+1
0002cb 912d      	LD   R18,X+
0002cc 83ae      	STD  Y+6,R26
0002cd 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0002ce d0d5      	RCALL SUBOPT_0x4
0002cf 3050      	CPI  R21,0
0002d0 f009      	BREQ _0x200005B
0002d1 5051      	SUBI R21,LOW(1)
                 _0x200005B:
0002d2 5031      	SUBI R19,LOW(1)
0002d3 cfeb      	RJMP _0x2000056
                 _0x2000058:
0002d4 c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0002d5 e320      	LDI  R18,LOW(48)
0002d6 81ee      	LDD  R30,Y+6
0002d7 81ff      	LDD  R31,Y+6+1
0002d8 d13b      	RCALL __GETW1PF
0002d9 87e8      	STD  Y+8,R30
0002da 87f9      	STD  Y+8+1,R31
0002db 81ee      	LDD  R30,Y+6
0002dc 81ff      	LDD  R31,Y+6+1
0002dd 9632      	ADIW R30,2
0002de 83ee      	STD  Y+6,R30
0002df 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0002e0 85e8      	LDD  R30,Y+8
0002e1 85f9      	LDD  R31,Y+8+1
0002e2 85aa      	LDD  R26,Y+10
0002e3 85bb      	LDD  R27,Y+10+1
0002e4 17ae      	CP   R26,R30
0002e5 07bf      	CPC  R27,R31
0002e6 f050      	BRLO _0x2000062
0002e7 5f2f      	SUBI R18,-LOW(1)
0002e8 85a8      	LDD  R26,Y+8
0002e9 85b9      	LDD  R27,Y+8+1
0002ea 85ea      	LDD  R30,Y+10
0002eb 85fb      	LDD  R31,Y+10+1
0002ec 1bea      	SUB  R30,R26
0002ed 0bfb      	SBC  R31,R27
0002ee 87ea      	STD  Y+10,R30
0002ef 87fb      	STD  Y+10+1,R31
0002f0 cfef      	RJMP _0x2000060
                 _0x2000062:
0002f1 332a      	CPI  R18,58
0002f2 f028      	BRLO _0x2000063
0002f3 ff03      	SBRS R16,3
0002f4 c002      	RJMP _0x2000064
0002f5 5f29      	SUBI R18,-LOW(7)
0002f6 c001      	RJMP _0x2000065
                 _0x2000064:
0002f7 5d29      	SUBI R18,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0002f8 fd04      	SBRC R16,4
0002f9 c019      	RJMP _0x2000067
0002fa 3321      	CPI  R18,49
0002fb f420      	BRSH _0x2000069
0002fc 85a8      	LDD  R26,Y+8
0002fd 85b9      	LDD  R27,Y+8+1
0002fe 9711      	SBIW R26,1
0002ff f409      	BRNE _0x2000068
                 _0x2000069:
000300 c009      	RJMP _0x20000D3
                 _0x2000068:
000301 1753      	CP   R21,R19
000302 f010      	BRLO _0x200006D
000303 ff00      	SBRS R16,0
000304 c001      	RJMP _0x200006E
                 _0x200006D:
000305 c011      	RJMP _0x200006C
                 _0x200006E:
000306 e220      	LDI  R18,LOW(32)
000307 ff07      	SBRS R16,7
000308 c00a      	RJMP _0x200006F
000309 e320      	LDI  R18,LOW(48)
                 _0x20000D3:
00030a 6100      	ORI  R16,LOW(16)
00030b ff02      	SBRS R16,2
00030c c006      	RJMP _0x2000070
00030d 7f0b      	ANDI R16,LOW(251)
00030e 934a      	ST   -Y,R20
00030f d0a1      	RCALL SUBOPT_0x6
000310 3050      	CPI  R21,0
000311 f009      	BREQ _0x2000071
000312 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
000313 d090      	RCALL SUBOPT_0x4
000314 3050      	CPI  R21,0
000315 f009      	BREQ _0x2000072
000316 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
000317 5031      	SUBI R19,LOW(1)
000318 85a8      	LDD  R26,Y+8
000319 85b9      	LDD  R27,Y+8+1
00031a 9712      	SBIW R26,2
00031b f008      	BRLO _0x200005F
00031c cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
00031d ff00      	SBRS R16,0
00031e c007      	RJMP _0x2000073
                 _0x2000074:
00031f 3050      	CPI  R21,0
000320 f029      	BREQ _0x2000076
000321 5051      	SUBI R21,LOW(1)
000322 e2e0      	LDI  R30,LOW(32)
000323 93ea      	ST   -Y,R30
000324 d08c      	RCALL SUBOPT_0x6
000325 cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
000326 e010      	LDI  R17,LOW(0)
                 _0x2000021:
000327 ceea      	RJMP _0x200001C
                 _0x200001E:
000328 85ac      	LDD  R26,Y+12
000329 85bd      	LDD  R27,Y+12+1
00032a 91ed      	LD   R30,X+
00032b 91fd      	LD   R31,X+
00032c d09b      	RCALL __LOADLOCR6
00032d 9664      	ADIW R28,20
00032e 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
00032f 92ff      	PUSH R15
000330 2ef8      	MOV  R15,R24
000331 9726      	SBIW R28,6
000332 931a      	ST   -Y,R17
000333 930a      	ST   -Y,R16
000334 01de      	MOVW R26,R28
000335 9614      	ADIW R26,4
                +
000336 2400     +CLR R0
000337 0daf     +ADD R26 , R15
000338 1db0     +ADC R27 , R0
                 	__ADDW2R15
000339 018d      	MOVW R16,R26
00033a e0e0      	LDI  R30,LOW(0)
00033b 83ec      	STD  Y+4,R30
00033c 83ed      	STD  Y+4+1,R30
00033d 83ee      	STD  Y+6,R30
00033e 83ef      	STD  Y+6+1,R30
00033f 01de      	MOVW R26,R28
000340 9618      	ADIW R26,8
                +
000341 2400     +CLR R0
000342 0daf     +ADD R26 , R15
000343 1db0     +ADC R27 , R0
                 	__ADDW2R15
000344 91ed      	LD   R30,X+
000345 91fd      	LD   R31,X+
000346 93fa      	ST   -Y,R31
000347 93ea      	ST   -Y,R30
000348 931a      	ST   -Y,R17
000349 930a      	ST   -Y,R16
00034a efe9      	LDI  R30,LOW(_put_usart_G100)
00034b e0f1      	LDI  R31,HIGH(_put_usart_G100)
00034c 93fa      	ST   -Y,R31
00034d 93ea      	ST   -Y,R30
00034e 01de      	MOVW R26,R28
00034f 9618      	ADIW R26,8
000350 deb6      	RCALL __print_G100
000351 8119      	LDD  R17,Y+1
000352 8108      	LDD  R16,Y+0
000353 9628      	ADIW R28,8
000354 90ff      	POP  R15
000355 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 _rand:
                 ; .FSTART _rand
000356 91e0 0200 	LDS  R30,__seed_G101
000358 91f0 0201 	LDS  R31,__seed_G101+1
00035a 9160 0202 	LDS  R22,__seed_G101+2
00035c 9170 0203 	LDS  R23,__seed_G101+3
                +
00035e e6ad     +LDI R26 , LOW ( 0x41C64E6D )
00035f e4be     +LDI R27 , HIGH ( 0x41C64E6D )
000360 ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
000361 e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
000362 d070      	RCALL __MULD12U
                +
000363 59ee     +SUBI R30 , LOW ( - 30562 )
000364 48f8     +SBCI R31 , HIGH ( - 30562 )
000365 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
000366 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
000367 93e0 0200 	STS  __seed_G101,R30
000369 93f0 0201 	STS  __seed_G101+1,R31
00036b 9360 0202 	STS  __seed_G101+2,R22
00036d 9370 0203 	STS  __seed_G101+3,R23
00036f 01fb      	movw r30,r22
000370 77ff      	andi r31,0x7F
000371 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000372 93ba      	ST   -Y,R27
000373 93aa      	ST   -Y,R26
000374 91a9          ld   r26,y+
000375 91b9          ld   r27,y+
000376 27ee          clr  r30
000377 27ff          clr  r31
                 strlen0:
000378 916d          ld   r22,x+
000379 2366          tst  r22
00037a f011          breq strlen1
00037b 9631          adiw r30,1
00037c cffb          rjmp strlen0
                 strlen1:
00037d 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00037e 93ba      	ST   -Y,R27
00037f 93aa      	ST   -Y,R26
000380 27aa          clr  r26
000381 27bb          clr  r27
000382 91e9          ld   r30,y+
000383 91f9          ld   r31,y+
                 strlenf0:
000384 9005      	lpm  r0,z+
000385 2000          tst  r0
000386 f011          breq strlenf1
000387 9611          adiw r26,1
000388 cffb          rjmp strlenf0
                 strlenf1:
000389 01fd          movw r30,r26
00038a 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 __seed_G101:
000200           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
00038b 93fa      	ST   -Y,R31
00038c 93ea      	ST   -Y,R30
00038d 01f8      	MOVW R30,R16
00038e 2766      	CLR  R22
00038f 2777      	CLR  R23
000390 d087      	RCALL __PUTPARD1
000391 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000392 985c      	CBI  0xB,4
000393 e0af      	LDI  R26,LOW(15)
000394 e0b0      	LDI  R27,0
000395 d087      	RCALL _delay_ms
000396 cdb7      	RJMP _read_light
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000397 d080      	RCALL __PUTPARD1
000398 e088      	LDI  R24,8
000399 df95      	RCALL _printf
00039a 962a      	ADIW R28,10
00039b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
00039c dfb9      	RCALL _rand
00039d 01df      	MOVW R26,R30
00039e e2ec      	LDI  R30,LOW(300)
00039f e0f1      	LDI  R31,HIGH(300)
0003a0 d065      	RCALL __MODW21
0003a1 83e8      	ST   Y,R30
0003a2 83f9      	STD  Y+1,R31
0003a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x4:
0003a4 932a      	ST   -Y,R18
0003a5 85ad      	LDD  R26,Y+13
0003a6 85be      	LDD  R27,Y+13+1
0003a7 85ef      	LDD  R30,Y+15
0003a8 89f8      	LDD  R31,Y+15+1
0003a9 9509      	ICALL
0003aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x5:
0003ab 89e8      	LDD  R30,Y+16
0003ac 89f9      	LDD  R31,Y+16+1
0003ad 9734      	SBIW R30,4
0003ae 8be8      	STD  Y+16,R30
0003af 8bf9      	STD  Y+16+1,R31
0003b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
0003b1 85ad      	LDD  R26,Y+13
0003b2 85be      	LDD  R27,Y+13+1
0003b3 85ef      	LDD  R30,Y+15
0003b4 89f8      	LDD  R31,Y+15+1
0003b5 9509      	ICALL
0003b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
0003b7 89a8      	LDD  R26,Y+16
0003b8 89b9      	LDD  R27,Y+16+1
0003b9 9614      	ADIW R26,4
0003ba 91ed      	LD   R30,X+
0003bb 91fd      	LD   R31,X+
0003bc 83ee      	STD  Y+6,R30
0003bd 83ff      	STD  Y+6+1,R31
0003be 81ae      	LDD  R26,Y+6
0003bf 81bf      	LDD  R27,Y+6+1
0003c0 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0003c1 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003c2 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003c3 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003c4 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003c5 931a      	ST   -Y,R17
0003c6 930a      	ST   -Y,R16
0003c7 9508      	RET
                 
                 __LOADLOCR6:
0003c8 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003c9 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003ca 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003cb 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003cc 8119      	LDD  R17,Y+1
0003cd 8108      	LD   R16,Y
0003ce 9508      	RET
                 
                 __ANEGW1:
0003cf 95f1      	NEG  R31
0003d0 95e1      	NEG  R30
0003d1 40f0      	SBCI R31,0
0003d2 9508      	RET
                 
                 __MULD12U:
0003d3 9f7a      	MUL  R23,R26
0003d4 2d70      	MOV  R23,R0
0003d5 9f6b      	MUL  R22,R27
0003d6 0d70      	ADD  R23,R0
0003d7 9ff8      	MUL  R31,R24
0003d8 0d70      	ADD  R23,R0
0003d9 9fe9      	MUL  R30,R25
0003da 0d70      	ADD  R23,R0
0003db 9f6a      	MUL  R22,R26
0003dc 2d60      	MOV  R22,R0
0003dd 0d71      	ADD  R23,R1
0003de 9ffb      	MUL  R31,R27
0003df 0d60      	ADD  R22,R0
0003e0 1d71      	ADC  R23,R1
0003e1 9fe8      	MUL  R30,R24
0003e2 0d60      	ADD  R22,R0
0003e3 1d71      	ADC  R23,R1
0003e4 2788      	CLR  R24
0003e5 9ffa      	MUL  R31,R26
0003e6 2df0      	MOV  R31,R0
0003e7 0d61      	ADD  R22,R1
0003e8 1f78      	ADC  R23,R24
0003e9 9feb      	MUL  R30,R27
0003ea 0df0      	ADD  R31,R0
0003eb 1d61      	ADC  R22,R1
0003ec 1f78      	ADC  R23,R24
0003ed 9fea      	MUL  R30,R26
0003ee 2de0      	MOV  R30,R0
0003ef 0df1      	ADD  R31,R1
0003f0 1f68      	ADC  R22,R24
0003f1 1f78      	ADC  R23,R24
0003f2 9508      	RET
                 
                 __DIVW21U:
0003f3 2400      	CLR  R0
0003f4 2411      	CLR  R1
0003f5 e190      	LDI  R25,16
                 __DIVW21U1:
0003f6 0faa      	LSL  R26
0003f7 1fbb      	ROL  R27
0003f8 1c00      	ROL  R0
0003f9 1c11      	ROL  R1
0003fa 1a0e      	SUB  R0,R30
0003fb 0a1f      	SBC  R1,R31
0003fc f418      	BRCC __DIVW21U2
0003fd 0e0e      	ADD  R0,R30
0003fe 1e1f      	ADC  R1,R31
0003ff c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000400 60a1      	SBR  R26,1
                 __DIVW21U3:
000401 959a      	DEC  R25
000402 f799      	BRNE __DIVW21U1
000403 01fd      	MOVW R30,R26
000404 01d0      	MOVW R26,R0
000405 9508      	RET
                 
                 __MODW21:
000406 94e8      	CLT
000407 ffb7      	SBRS R27,7
000408 c004      	RJMP __MODW211
000409 95b1      	NEG  R27
00040a 95a1      	NEG  R26
00040b 40b0      	SBCI R27,0
00040c 9468      	SET
                 __MODW211:
00040d fdf7      	SBRC R31,7
00040e dfc0      	RCALL __ANEGW1
00040f dfe3      	RCALL __DIVW21U
000410 01fd      	MOVW R30,R26
000411 f40e      	BRTC __MODW212
000412 dfbc      	RCALL __ANEGW1
                 __MODW212:
000413 9508      	RET
                 
                 __GETW1PF:
000414 9005      	LPM  R0,Z+
000415 91f4      	LPM  R31,Z
000416 2de0      	MOV  R30,R0
000417 9508      	RET
                 
                 __PUTPARD1:
000418 937a      	ST   -Y,R23
000419 936a      	ST   -Y,R22
00041a 93fa      	ST   -Y,R31
00041b 93ea      	ST   -Y,R30
00041c 9508      	RET
                 
                 _delay_ms:
00041d 9610      	adiw r26,0
00041e f039      	breq __delay_ms1
                 __delay_ms0:
00041f 95a8      	wdr
                +
000420 e888     +LDI R24 , LOW ( 0x1388 )
000421 e193     +LDI R25 , HIGH ( 0x1388 )
                +__DELAY_USW_LOOP :
000422 9701     +SBIW R24 , 1
000423 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x1388
000424 9711      	sbiw r26,1
000425 f7c9      	brne __delay_ms0
                 __delay_ms1:
000426 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega164A register use summary:
r0 :  28 r1 :  11 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  46 r17:  34 r18:  36 r19:  16 r20:   9 r21:  20 r22:  27 r23:  20 
r24:  22 r25:   7 r26:  82 r27:  43 r28:  18 r29:   1 r30: 229 r31:  82 
x  :  25 y  : 159 z  :  13 
Registers used: 22 out of 35 (62.9%)

ATmega164A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  10 add   :  14 
adiw  :  22 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  16 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   1 brmi  :   0 brne  :  25 brpl  :   1 brsh  :   3 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   4 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  19 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   3 cpi   :  32 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   0 jmp   :  32 ld    :  27 ldd   :  67 ldi   : 110 
lds   :  10 lpm   :  14 lsl   :   1 lsr   :   0 mov   :  21 movw  :  24 
mul   :  11 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   0 
ori   :   9 out   :  22 pop   :   2 push  :   2 rcall :  63 ret   :  27 
reti  :   0 rjmp  :  59 rol   :   3 ror   :   0 sbc   :   5 sbci  :   6 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  17 sbr   :   1 sbrc  :   3 
sbrs  :  11 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  57 std   :  34 sts   :  43 sub   :   4 subi  :  16 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 57 out of 116 (49.1%)

ATmega164A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00084e   1952    174   2126   16384  13.0%
[.dseg] 0x000100 0x000204      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 2 warnings
