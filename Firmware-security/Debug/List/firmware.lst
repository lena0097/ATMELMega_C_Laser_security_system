
AVRASM ver. 2.1.30  D:\1code\ATMELMega_C_Laser_security_system\Firmware-security\Debug\List\firmware.asm Sun May 07 16:19:41 2023

                 
                 
                 ;CodeVisionAVR C Compiler V3.51 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega164A
                 ;Program type           : Application
                 ;Clock frequency        : 20.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega164A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x04FF
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0050 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00003e 2710
00003f 03e8
000040 0064
000041 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000042 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000043 1000
000044 0100
000045 0010
000046 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000047 696c
000048 6867
000049 2074
00004a 656c      	.DB  0x6C,0x69,0x67,0x68,0x74,0x20,0x6C,0x65
00004b 6576
00004c 3a6c
00004d 2520
00004e 2064      	.DB  0x76,0x65,0x6C,0x3A,0x20,0x25,0x64,0x20
00004f 000a      	.DB  0xA,0x0
                 __RESET:
000050 94f8      	CLI
000051 27ee      	CLR  R30
000052 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000053 e0f1      	LDI  R31,1
000054 bff5      	OUT  MCUCR,R31
000055 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000056 e08d      	LDI  R24,(14-2)+1
000057 e0a2      	LDI  R26,2
000058 27bb      	CLR  R27
                 __CLEAR_REG:
000059 93ed      	ST   X+,R30
00005a 958a      	DEC  R24
00005b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005d e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005e e0a0      	LDI  R26,LOW(__SRAM_START)
00005f e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000060 93ed      	ST   X+,R30
000061 9701      	SBIW R24,1
000062 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GPIOR0 INITIALIZATION
000063 e0e0      	LDI  R30,__GPIOR0_INIT
000064 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000065 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000066 bfed      	OUT  SPL,R30
000067 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000068 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000069 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006a e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006b 940c 00f2 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x200
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _heartbeat_mcu:
                 ; .FSTART _heartbeat_mcu
00006d 985e      	CBI  0xB,6
00006e e3a2      	LDI  R26,LOW(50)
00006f e0b0      	LDI  R27,0
000070 d24e      	RCALL _delay_ms
000071 9a5e      	SBI  0xB,6
000072 e3a2      	LDI  R26,LOW(50)
000073 e0b0      	LDI  R27,0
000074 d24a      	RCALL _delay_ms
000075 9508      	RET
                 ; .FEND
                 _initialise_mcu:
                 ; .FSTART _initialise_mcu
000076 e8e0      	LDI  R30,LOW(128)
000077 93e0 0061 	STS  97,R30
000079 e0e0      	LDI  R30,LOW(0)
00007a 93e0 0061 	STS  97,R30
00007c b9e1      	OUT  0x1,R30
00007d b9e2      	OUT  0x2,R30
00007e b9e4      	OUT  0x4,R30
00007f b9e5      	OUT  0x5,R30
000080 b9e7      	OUT  0x7,R30
000081 b9e8      	OUT  0x8,R30
000082 e5e0      	LDI  R30,LOW(80)
000083 b9ea      	OUT  0xA,R30
000084 e0e0      	LDI  R30,LOW(0)
000085 b9eb      	OUT  0xB,R30
000086 bde4      	OUT  0x24,R30
000087 bde5      	OUT  0x25,R30
000088 bde6      	OUT  0x26,R30
000089 bde7      	OUT  0x27,R30
00008a bde8      	OUT  0x28,R30
00008b 93e0 0080 	STS  128,R30
00008d 93e0 0081 	STS  129,R30
00008f 93e0 0085 	STS  133,R30
000091 93e0 0084 	STS  132,R30
000093 93e0 0087 	STS  135,R30
000095 93e0 0086 	STS  134,R30
000097 93e0 0089 	STS  137,R30
000099 93e0 0088 	STS  136,R30
00009b 93e0 008b 	STS  139,R30
00009d 93e0 008a 	STS  138,R30
00009f 93e0 00b6 	STS  182,R30
0000a1 93e0 00b0 	STS  176,R30
0000a3 93e0 00b1 	STS  177,R30
0000a5 93e0 00b2 	STS  178,R30
0000a7 93e0 00b3 	STS  179,R30
0000a9 93e0 00b4 	STS  180,R30
0000ab 93e0 006e 	STS  110,R30
0000ad 93e0 006f 	STS  111,R30
0000af 93e0 0070 	STS  112,R30
0000b1 93e0 0069 	STS  105,R30
0000b3 bbed      	OUT  0x1D,R30
0000b4 93e0 0068 	STS  104,R30
0000b6 93e0 00c0 	STS  192,R30
0000b8 e0e8      	LDI  R30,LOW(8)
0000b9 93e0 00c1 	STS  193,R30
0000bb e0e6      	LDI  R30,LOW(6)
0000bc 93e0 00c2 	STS  194,R30
0000be e0e0      	LDI  R30,LOW(0)
0000bf 93e0 00c5 	STS  197,R30
0000c1 e8e1      	LDI  R30,LOW(129)
0000c2 93e0 00c4 	STS  196,R30
0000c4 e0e0      	LDI  R30,LOW(0)
0000c5 93e0 00c9 	STS  201,R30
0000c7 e8e0      	LDI  R30,LOW(128)
0000c8 bfe0      	OUT  0x30,R30
0000c9 e0e0      	LDI  R30,LOW(0)
0000ca 93e0 007f 	STS  127,R30
0000cc bdec      	OUT  0x2C,R30
0000cd 93e0 00bc 	STS  188,R30
0000cf e9e0      	LDI  R30,LOW(144)
0000d0 93e0 007a 	STS  122,R30
0000d2 e0e0      	LDI  R30,LOW(0)
0000d3 e0f0      	LDI  R31,HIGH(0)
0000d4 9508      	RET
                 ; .FEND
                 _read_voltage:
                 ; .FSTART _read_voltage
0000d5 931a      	ST   -Y,R17
0000d6 2f1a      	MOV  R17,R26
                 ;	channel -> R17
0000d7 7017      	ANDI R17,LOW(7)
0000d8 2fe1      	MOV  R30,R17
0000d9 66e0      	ORI  R30,LOW(0x60)
0000da 93e0 007c 	STS  124,R30
0000dc 91e0 007a 	LDS  R30,122
0000de 64e0      	ORI  R30,0x40
0000df 93e0 007a 	STS  122,R30
                 _0xC:
0000e1 91e0 007a 	LDS  R30,122
0000e3 74e0      	ANDI R30,LOW(0x40)
0000e4 f7e1      	BRNE _0xC
0000e5 91e0 007a 	LDS  R30,122
0000e7 61e0      	ORI  R30,0x10
0000e8 93e0 007a 	STS  122,R30
0000ea 91e0 0079 	LDS  R30,121
0000ec c022      	RJMP _0x2060001
                 ; .FEND
                 _read_light:
                 ; .FSTART _read_light
0000ed 931a      	ST   -Y,R17
                 ;	light_level -> R17
0000ee e0a0      	LDI  R26,LOW(0)
0000ef dfe5      	RCALL _read_voltage
0000f0 2f1e      	MOV  R17,R30
0000f1 c01d      	RJMP _0x2060001
                 ; .FEND
                 ;	i -> R16,R17
                 ;void main(void) {
                 ; 0000 0009 void main(void) {
                 _main:
                 ; .FSTART _main
                 ; 0000 000A unsigned char light_level = 0;
                 ; 0000 000B if (!initialise_mcu())
                 ;	light_level -> R17
0000f2 e010      	LDI  R17,0
0000f3 df82      	RCALL _initialise_mcu
0000f4 9730      	SBIW R30,0
0000f5 f481      	BRNE _0x18
                 ; 0000 000C while (1) {
                 _0x19:
                 ; 0000 000D 
                 ; 0000 000E light_level = read_light();
0000f6 dff6      	RCALL _read_light
0000f7 2f1e      	MOV  R17,R30
                 ; 0000 000F 
                 ; 0000 0010 /* Wait for empty transmit buffer */
                 ; 0000 0011 printf("light level: %d \n", light_level);
                +
0000f8 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000f9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000fa 93fa      	ST   -Y,R31
0000fb 93ea      	ST   -Y,R30
0000fc 2fe1      	MOV  R30,R17
0000fd 27ff      	CLR  R31
0000fe 2766      	CLR  R22
0000ff 2777      	CLR  R23
000100 d1b9      	RCALL __PUTPARD1
000101 e084      	LDI  R24,4
000102 d144      	RCALL _printf
000103 9626      	ADIW R28,6
                 ; 0000 0012 
                 ; 0000 0013 
                 ; 0000 0014 //ring_alarm();
                 ; 0000 0015 
                 ; 0000 0016 heartbeat_mcu();
000104 df68      	RCALL _heartbeat_mcu
                 ; 0000 0017 
                 ; 0000 0018 }
000105 cff0      	RJMP _0x19
                 ; 0000 0019 }
                 _0x18:
                 _0x1C:
000106 cfff      	RJMP _0x1C
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
000107 931a      	ST   -Y,R17
000108 2f1a      	MOV  R17,R26
                 _0x2000006:
000109 91e0 00c0 	LDS  R30,192
00010b 72e0      	ANDI R30,LOW(0x20)
00010c f3e1      	BREQ _0x2000006
00010d 9310 00c6 	STS  198,R17
                 _0x2060001:
00010f 9119      	LD   R17,Y+
000110 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
000111 d194      	RCALL __SAVELOCR4
000112 018d      	MOVW R16,R26
000113 813c      	LDD  R19,Y+4
000114 2fa3      	MOV  R26,R19
000115 dff1      	RCALL _putchar
000116 01d8      	MOVW R26,R16
000117 91ed      	LD   R30,X+
000118 91fd      	LD   R31,X+
000119 9631      	ADIW R30,1
00011a 93fe      	ST   -X,R31
00011b 93ee      	ST   -X,R30
00011c d190      	RCALL __LOADLOCR4
00011d 9625      	ADIW R28,5
00011e 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
00011f 93ba      	ST   -Y,R27
000120 93aa      	ST   -Y,R26
000121 9726      	SBIW R28,6
000122 d181      	RCALL __SAVELOCR6
000123 e010      	LDI  R17,0
000124 85ac      	LDD  R26,Y+12
000125 85bd      	LDD  R27,Y+12+1
000126 e0e0      	LDI  R30,LOW(0)
000127 e0f0      	LDI  R31,HIGH(0)
000128 93ed      	ST   X+,R30
000129 93fc      	ST   X,R31
                 _0x200001C:
00012a 89ea      	LDD  R30,Y+18
00012b 89fb      	LDD  R31,Y+18+1
00012c 9631      	ADIW R30,1
00012d 8bea      	STD  Y+18,R30
00012e 8bfb      	STD  Y+18+1,R31
00012f 9731      	SBIW R30,1
000130 91e4      	LPM  R30,Z
000131 2f2e      	MOV  R18,R30
000132 30e0      	CPI  R30,0
000133 f409      	BRNE PC+2
000134 c10b      	RJMP _0x200001E
000135 2fe1      	MOV  R30,R17
000136 30e0      	CPI  R30,0
000137 f431      	BRNE _0x2000022
000138 3225      	CPI  R18,37
000139 f411      	BRNE _0x2000023
00013a e011      	LDI  R17,LOW(1)
00013b c001      	RJMP _0x2000024
                 _0x2000023:
00013c d14a      	RCALL SUBOPT_0x0
                 _0x2000024:
00013d c101      	RJMP _0x2000021
                 _0x2000022:
00013e 30e1      	CPI  R30,LOW(0x1)
00013f f4a1      	BRNE _0x2000025
000140 3225      	CPI  R18,37
000141 f411      	BRNE _0x2000026
000142 d144      	RCALL SUBOPT_0x0
000143 c0fa      	RJMP _0x20000D2
                 _0x2000026:
000144 e012      	LDI  R17,LOW(2)
000145 e040      	LDI  R20,LOW(0)
000146 e000      	LDI  R16,LOW(0)
000147 322d      	CPI  R18,45
000148 f411      	BRNE _0x2000027
000149 e001      	LDI  R16,LOW(1)
00014a c0f4      	RJMP _0x2000021
                 _0x2000027:
00014b 322b      	CPI  R18,43
00014c f411      	BRNE _0x2000028
00014d e24b      	LDI  R20,LOW(43)
00014e c0f0      	RJMP _0x2000021
                 _0x2000028:
00014f 3220      	CPI  R18,32
000150 f411      	BRNE _0x2000029
000151 e240      	LDI  R20,LOW(32)
000152 c0ec      	RJMP _0x2000021
                 _0x2000029:
000153 c002      	RJMP _0x200002A
                 _0x2000025:
000154 30e2      	CPI  R30,LOW(0x2)
000155 f439      	BRNE _0x200002B
                 _0x200002A:
000156 e050      	LDI  R21,LOW(0)
000157 e013      	LDI  R17,LOW(3)
000158 3320      	CPI  R18,48
000159 f411      	BRNE _0x200002C
00015a 6800      	ORI  R16,LOW(128)
00015b c0e3      	RJMP _0x2000021
                 _0x200002C:
00015c c003      	RJMP _0x200002D
                 _0x200002B:
00015d 30e3      	CPI  R30,LOW(0x3)
00015e f009      	BREQ PC+2
00015f c0df      	RJMP _0x2000021
                 _0x200002D:
000160 3320      	CPI  R18,48
000161 f010      	BRLO _0x2000030
000162 332a      	CPI  R18,58
000163 f008      	BRLO _0x2000031
                 _0x2000030:
000164 c007      	RJMP _0x200002F
                 _0x2000031:
000165 e0aa      	LDI  R26,LOW(10)
000166 9f5a      	MUL  R21,R26
000167 2d50      	MOV  R21,R0
000168 2fe2      	MOV  R30,R18
000169 53e0      	SUBI R30,LOW(48)
00016a 0f5e      	ADD  R21,R30
00016b c0d3      	RJMP _0x2000021
                 _0x200002F:
00016c 2fe2      	MOV  R30,R18
00016d 36e3      	CPI  R30,LOW(0x63)
00016e f439      	BRNE _0x2000035
00016f d11e      	RCALL SUBOPT_0x1
000170 89e8      	LDD  R30,Y+16
000171 89f9      	LDD  R31,Y+16+1
000172 81a4      	LDD  R26,Z+4
000173 93aa      	ST   -Y,R26
000174 d11f      	RCALL SUBOPT_0x2
000175 c0c8      	RJMP _0x2000036
                 _0x2000035:
000176 37e3      	CPI  R30,LOW(0x73)
000177 f429      	BRNE _0x2000038
000178 d115      	RCALL SUBOPT_0x1
000179 d120      	RCALL SUBOPT_0x3
00017a d0f3      	RCALL _strlen
00017b 2f1e      	MOV  R17,R30
00017c c007      	RJMP _0x2000039
                 _0x2000038:
00017d 37e0      	CPI  R30,LOW(0x70)
00017e f449      	BRNE _0x200003B
00017f d10e      	RCALL SUBOPT_0x1
000180 d119      	RCALL SUBOPT_0x3
000181 d0f8      	RCALL _strlenf
000182 2f1e      	MOV  R17,R30
000183 6008      	ORI  R16,LOW(8)
                 _0x2000039:
000184 6002      	ORI  R16,LOW(2)
000185 770f      	ANDI R16,LOW(127)
000186 e030      	LDI  R19,LOW(0)
000187 c03a      	RJMP _0x200003C
                 _0x200003B:
000188 36e4      	CPI  R30,LOW(0x64)
000189 f011      	BREQ _0x200003F
00018a 36e9      	CPI  R30,LOW(0x69)
00018b f411      	BRNE _0x2000040
                 _0x200003F:
00018c 6004      	ORI  R16,LOW(4)
00018d c002      	RJMP _0x2000041
                 _0x2000040:
00018e 37e5      	CPI  R30,LOW(0x75)
00018f f431      	BRNE _0x2000042
                 _0x2000041:
000190 e7ec      	LDI  R30,LOW(_tbl10_G100*2)
000191 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000192 83ee      	STD  Y+6,R30
000193 83ff      	STD  Y+6+1,R31
000194 e015      	LDI  R17,LOW(5)
000195 c00c      	RJMP _0x2000043
                 _0x2000042:
000196 35e8      	CPI  R30,LOW(0x58)
000197 f411      	BRNE _0x2000045
000198 6008      	ORI  R16,LOW(8)
000199 c003      	RJMP _0x2000046
                 _0x2000045:
00019a 37e8      	CPI  R30,LOW(0x78)
00019b f009      	BREQ PC+2
00019c c0a1      	RJMP _0x2000077
                 _0x2000046:
00019d e8e6      	LDI  R30,LOW(_tbl16_G100*2)
00019e e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00019f 83ee      	STD  Y+6,R30
0001a0 83ff      	STD  Y+6+1,R31
0001a1 e014      	LDI  R17,LOW(4)
                 _0x2000043:
0001a2 ff02      	SBRS R16,2
0001a3 c015      	RJMP _0x2000048
0001a4 d0e9      	RCALL SUBOPT_0x1
0001a5 89a8      	LDD  R26,Y+16
0001a6 89b9      	LDD  R27,Y+16+1
0001a7 9614      	ADIW R26,4
0001a8 91ed      	LD   R30,X+
0001a9 91fd      	LD   R31,X+
0001aa 87ea      	STD  Y+10,R30
0001ab 87fb      	STD  Y+10+1,R31
0001ac 85ab      	LDD  R26,Y+11
0001ad 23aa      	TST  R26
0001ae f422      	BRPL _0x2000049
0001af d102      	RCALL __ANEGW1
0001b0 87ea      	STD  Y+10,R30
0001b1 87fb      	STD  Y+10+1,R31
0001b2 e24d      	LDI  R20,LOW(45)
                 _0x2000049:
0001b3 3040      	CPI  R20,0
0001b4 f011      	BREQ _0x200004A
0001b5 5f1f      	SUBI R17,-LOW(1)
0001b6 c001      	RJMP _0x200004B
                 _0x200004A:
0001b7 7f0b      	ANDI R16,LOW(251)
                 _0x200004B:
0001b8 c009      	RJMP _0x200004C
                 _0x2000048:
0001b9 d0d4      	RCALL SUBOPT_0x1
0001ba 89a8      	LDD  R26,Y+16
0001bb 89b9      	LDD  R27,Y+16+1
0001bc 9614      	ADIW R26,4
                +
0001bd 91ed     +LD R30 , X +
0001be 91fc     +LD R31 , X
0001bf 9711     +SBIW R26 , 1
                 	__GETW1P
0001c0 87ea      	STD  Y+10,R30
0001c1 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
0001c2 fd00      	SBRC R16,0
0001c3 c010      	RJMP _0x200004D
                 _0x200004E:
0001c4 1715      	CP   R17,R21
0001c5 f470      	BRSH _0x2000050
0001c6 ff07      	SBRS R16,7
0001c7 c008      	RJMP _0x2000051
0001c8 ff02      	SBRS R16,2
0001c9 c004      	RJMP _0x2000052
0001ca 7f0b      	ANDI R16,LOW(251)
0001cb 2f24      	MOV  R18,R20
0001cc 5011      	SUBI R17,LOW(1)
0001cd c001      	RJMP _0x2000053
                 _0x2000052:
0001ce e320      	LDI  R18,LOW(48)
                 _0x2000053:
0001cf c001      	RJMP _0x2000054
                 _0x2000051:
0001d0 e220      	LDI  R18,LOW(32)
                 _0x2000054:
0001d1 d0b5      	RCALL SUBOPT_0x0
0001d2 5051      	SUBI R21,LOW(1)
0001d3 cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
0001d4 2f31      	MOV  R19,R17
0001d5 ff01      	SBRS R16,1
0001d6 c016      	RJMP _0x2000055
                 _0x2000056:
0001d7 3030      	CPI  R19,0
0001d8 f099      	BREQ _0x2000058
0001d9 ff03      	SBRS R16,3
0001da c006      	RJMP _0x2000059
0001db 81ee      	LDD  R30,Y+6
0001dc 81ff      	LDD  R31,Y+6+1
0001dd 9125      	LPM  R18,Z+
0001de 83ee      	STD  Y+6,R30
0001df 83ff      	STD  Y+6+1,R31
0001e0 c005      	RJMP _0x200005A
                 _0x2000059:
0001e1 81ae      	LDD  R26,Y+6
0001e2 81bf      	LDD  R27,Y+6+1
0001e3 912d      	LD   R18,X+
0001e4 83ae      	STD  Y+6,R26
0001e5 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0001e6 d0a0      	RCALL SUBOPT_0x0
0001e7 3050      	CPI  R21,0
0001e8 f009      	BREQ _0x200005B
0001e9 5051      	SUBI R21,LOW(1)
                 _0x200005B:
0001ea 5031      	SUBI R19,LOW(1)
0001eb cfeb      	RJMP _0x2000056
                 _0x2000058:
0001ec c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0001ed e320      	LDI  R18,LOW(48)
0001ee 81ee      	LDD  R30,Y+6
0001ef 81ff      	LDD  R31,Y+6+1
0001f0 d0c5      	RCALL __GETW1PF
0001f1 87e8      	STD  Y+8,R30
0001f2 87f9      	STD  Y+8+1,R31
0001f3 81ee      	LDD  R30,Y+6
0001f4 81ff      	LDD  R31,Y+6+1
0001f5 9632      	ADIW R30,2
0001f6 83ee      	STD  Y+6,R30
0001f7 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0001f8 85e8      	LDD  R30,Y+8
0001f9 85f9      	LDD  R31,Y+8+1
0001fa 85aa      	LDD  R26,Y+10
0001fb 85bb      	LDD  R27,Y+10+1
0001fc 17ae      	CP   R26,R30
0001fd 07bf      	CPC  R27,R31
0001fe f050      	BRLO _0x2000062
0001ff 5f2f      	SUBI R18,-LOW(1)
000200 85a8      	LDD  R26,Y+8
000201 85b9      	LDD  R27,Y+8+1
000202 85ea      	LDD  R30,Y+10
000203 85fb      	LDD  R31,Y+10+1
000204 1bea      	SUB  R30,R26
000205 0bfb      	SBC  R31,R27
000206 87ea      	STD  Y+10,R30
000207 87fb      	STD  Y+10+1,R31
000208 cfef      	RJMP _0x2000060
                 _0x2000062:
000209 332a      	CPI  R18,58
00020a f028      	BRLO _0x2000063
00020b ff03      	SBRS R16,3
00020c c002      	RJMP _0x2000064
00020d 5f29      	SUBI R18,-LOW(7)
00020e c001      	RJMP _0x2000065
                 _0x2000064:
00020f 5d29      	SUBI R18,-LOW(39)
                 _0x2000065:
                 _0x2000063:
000210 fd04      	SBRC R16,4
000211 c019      	RJMP _0x2000067
000212 3321      	CPI  R18,49
000213 f420      	BRSH _0x2000069
000214 85a8      	LDD  R26,Y+8
000215 85b9      	LDD  R27,Y+8+1
000216 9711      	SBIW R26,1
000217 f409      	BRNE _0x2000068
                 _0x2000069:
000218 c009      	RJMP _0x20000D3
                 _0x2000068:
000219 1753      	CP   R21,R19
00021a f010      	BRLO _0x200006D
00021b ff00      	SBRS R16,0
00021c c001      	RJMP _0x200006E
                 _0x200006D:
00021d c011      	RJMP _0x200006C
                 _0x200006E:
00021e e220      	LDI  R18,LOW(32)
00021f ff07      	SBRS R16,7
000220 c00a      	RJMP _0x200006F
000221 e320      	LDI  R18,LOW(48)
                 _0x20000D3:
000222 6100      	ORI  R16,LOW(16)
000223 ff02      	SBRS R16,2
000224 c006      	RJMP _0x2000070
000225 7f0b      	ANDI R16,LOW(251)
000226 934a      	ST   -Y,R20
000227 d06c      	RCALL SUBOPT_0x2
000228 3050      	CPI  R21,0
000229 f009      	BREQ _0x2000071
00022a 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
00022b d05b      	RCALL SUBOPT_0x0
00022c 3050      	CPI  R21,0
00022d f009      	BREQ _0x2000072
00022e 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
00022f 5031      	SUBI R19,LOW(1)
000230 85a8      	LDD  R26,Y+8
000231 85b9      	LDD  R27,Y+8+1
000232 9712      	SBIW R26,2
000233 f008      	BRLO _0x200005F
000234 cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
000235 ff00      	SBRS R16,0
000236 c007      	RJMP _0x2000073
                 _0x2000074:
000237 3050      	CPI  R21,0
000238 f029      	BREQ _0x2000076
000239 5051      	SUBI R21,LOW(1)
00023a e2e0      	LDI  R30,LOW(32)
00023b 93ea      	ST   -Y,R30
00023c d057      	RCALL SUBOPT_0x2
00023d cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
00023e e010      	LDI  R17,LOW(0)
                 _0x2000021:
00023f ceea      	RJMP _0x200001C
                 _0x200001E:
000240 85ac      	LDD  R26,Y+12
000241 85bd      	LDD  R27,Y+12+1
000242 91ed      	LD   R30,X+
000243 91fd      	LD   R31,X+
000244 d066      	RCALL __LOADLOCR6
000245 9664      	ADIW R28,20
000246 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
000247 92ff      	PUSH R15
000248 2ef8      	MOV  R15,R24
000249 9726      	SBIW R28,6
00024a 931a      	ST   -Y,R17
00024b 930a      	ST   -Y,R16
00024c 01de      	MOVW R26,R28
00024d 9614      	ADIW R26,4
                +
00024e 2400     +CLR R0
00024f 0daf     +ADD R26 , R15
000250 1db0     +ADC R27 , R0
                 	__ADDW2R15
000251 018d      	MOVW R16,R26
000252 e0e0      	LDI  R30,LOW(0)
000253 83ec      	STD  Y+4,R30
000254 83ed      	STD  Y+4+1,R30
000255 83ee      	STD  Y+6,R30
000256 83ef      	STD  Y+6+1,R30
000257 01de      	MOVW R26,R28
000258 9618      	ADIW R26,8
                +
000259 2400     +CLR R0
00025a 0daf     +ADD R26 , R15
00025b 1db0     +ADC R27 , R0
                 	__ADDW2R15
00025c 91ed      	LD   R30,X+
00025d 91fd      	LD   R31,X+
00025e 93fa      	ST   -Y,R31
00025f 93ea      	ST   -Y,R30
000260 931a      	ST   -Y,R17
000261 930a      	ST   -Y,R16
000262 e1e1      	LDI  R30,LOW(_put_usart_G100)
000263 e0f1      	LDI  R31,HIGH(_put_usart_G100)
000264 93fa      	ST   -Y,R31
000265 93ea      	ST   -Y,R30
000266 01de      	MOVW R26,R28
000267 9618      	ADIW R26,8
000268 deb6      	RCALL __print_G100
000269 8119      	LDD  R17,Y+1
00026a 8108      	LDD  R16,Y+0
00026b 9628      	ADIW R28,8
00026c 90ff      	POP  R15
00026d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00026e 93ba      	ST   -Y,R27
00026f 93aa      	ST   -Y,R26
000270 91a9          ld   r26,y+
000271 91b9          ld   r27,y+
000272 27ee          clr  r30
000273 27ff          clr  r31
                 strlen0:
000274 916d          ld   r22,x+
000275 2366          tst  r22
000276 f011          breq strlen1
000277 9631          adiw r30,1
000278 cffb          rjmp strlen0
                 strlen1:
000279 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00027a 93ba      	ST   -Y,R27
00027b 93aa      	ST   -Y,R26
00027c 27aa          clr  r26
00027d 27bb          clr  r27
00027e 91e9          ld   r30,y+
00027f 91f9          ld   r31,y+
                 strlenf0:
000280 9005      	lpm  r0,z+
000281 2000          tst  r0
000282 f011          breq strlenf1
000283 9611          adiw r26,1
000284 cffb          rjmp strlenf0
                 strlenf1:
000285 01fd          movw r30,r26
000286 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x0:
000287 932a      	ST   -Y,R18
000288 85ad      	LDD  R26,Y+13
000289 85be      	LDD  R27,Y+13+1
00028a 85ef      	LDD  R30,Y+15
00028b 89f8      	LDD  R31,Y+15+1
00028c 9509      	ICALL
00028d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x1:
00028e 89e8      	LDD  R30,Y+16
00028f 89f9      	LDD  R31,Y+16+1
000290 9734      	SBIW R30,4
000291 8be8      	STD  Y+16,R30
000292 8bf9      	STD  Y+16+1,R31
000293 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2:
000294 85ad      	LDD  R26,Y+13
000295 85be      	LDD  R27,Y+13+1
000296 85ef      	LDD  R30,Y+15
000297 89f8      	LDD  R31,Y+15+1
000298 9509      	ICALL
000299 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
00029a 89a8      	LDD  R26,Y+16
00029b 89b9      	LDD  R27,Y+16+1
00029c 9614      	ADIW R26,4
00029d 91ed      	LD   R30,X+
00029e 91fd      	LD   R31,X+
00029f 83ee      	STD  Y+6,R30
0002a0 83ff      	STD  Y+6+1,R31
0002a1 81ae      	LDD  R26,Y+6
0002a2 81bf      	LDD  R27,Y+6+1
0002a3 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0002a4 935a      	ST   -Y,R21
                 __SAVELOCR5:
0002a5 934a      	ST   -Y,R20
                 __SAVELOCR4:
0002a6 933a      	ST   -Y,R19
                 __SAVELOCR3:
0002a7 932a      	ST   -Y,R18
                 __SAVELOCR2:
0002a8 931a      	ST   -Y,R17
0002a9 930a      	ST   -Y,R16
0002aa 9508      	RET
                 
                 __LOADLOCR6:
0002ab 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0002ac 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0002ad 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0002ae 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0002af 8119      	LDD  R17,Y+1
0002b0 8108      	LD   R16,Y
0002b1 9508      	RET
                 
                 __ANEGW1:
0002b2 95f1      	NEG  R31
0002b3 95e1      	NEG  R30
0002b4 40f0      	SBCI R31,0
0002b5 9508      	RET
                 
                 __GETW1PF:
0002b6 9005      	LPM  R0,Z+
0002b7 91f4      	LPM  R31,Z
0002b8 2de0      	MOV  R30,R0
0002b9 9508      	RET
                 
                 __PUTPARD1:
0002ba 937a      	ST   -Y,R23
0002bb 936a      	ST   -Y,R22
0002bc 93fa      	ST   -Y,R31
0002bd 93ea      	ST   -Y,R30
0002be 9508      	RET
                 
                 _delay_ms:
0002bf 9610      	adiw r26,0
0002c0 f039      	breq __delay_ms1
                 __delay_ms0:
0002c1 95a8      	wdr
                +
0002c2 e888     +LDI R24 , LOW ( 0x1388 )
0002c3 e193     +LDI R25 , HIGH ( 0x1388 )
                +__DELAY_USW_LOOP :
0002c4 9701     +SBIW R24 , 1
0002c5 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x1388
0002c6 9711      	sbiw r26,1
0002c7 f7c9      	brne __delay_ms0
                 __delay_ms1:
0002c8 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega164A register use summary:
r0 :   9 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  32 r17:  32 r18:  27 r19:  10 r20:   9 r21:  17 r22:   4 r23:   2 
r24:   8 r25:   2 r26:  56 r27:  27 r28:  10 r29:   1 r30: 171 r31:  50 
x  :  20 y  : 124 z  :   6 
Registers used: 21 out of 35 (60.0%)

ATmega164A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   3 
adiw  :  16 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  13 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  23 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   1 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  11 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   1 cpi   :  29 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  32 ld    :  20 ldd   :  56 ldi   :  68 
lds   :   5 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  18 movw  :   7 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   9 out   :  22 pop   :   1 push  :   1 rcall :  33 ret   :  18 
reti  :   0 rjmp  :  53 rol   :   0 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :   1 sbic  :   0 sbis  :   0 sbiw  :  11 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  39 std   :  30 sts   :  36 sub   :   1 subi  :  13 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 47 out of 116 (40.5%)

ATmega164A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000592   1390     36   1426   16384   8.7%
[.dseg] 0x000100 0x000200      0      0      0    1024   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 0 warnings
